#!amber

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# A test for a bug found by the GraphicsFuzz project.

# Short description: Equivalent shaders, one with DontInline attribute

# The test passes because both shaders render the same image.

SHADER vertex reference_vertex_shader PASSTHROUGH

SHADER fragment reference_fragment_shader SPIRV-ASM TARGET_ENV spv1.0
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 331
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %183 %324
               OpExecutionMode %4 OriginUpperLeft
               OpSource ESSL 320
               OpName %4 "main"
               OpName %11 "swap(i1;i1;"
               OpName %9 "i"
               OpName %10 "j"
               OpName %16 "performPartition(i1;i1;"
               OpName %14 "l"
               OpName %15 "h"
               OpName %18 "quicksort("
               OpName %20 "temp"
               OpName %24 "QuicksortObject"
               OpMemberName %24 0 "numbers"
               OpName %26 "obj"
               OpName %40 "pivot"
               OpName %44 "i"
               OpName %48 "j"
               OpName %69 "param"
               OpName %71 "param"
               OpName %78 "param"
               OpName %80 "param"
               OpName %86 "l"
               OpName %87 "h"
               OpName %89 "top"
               OpName %92 "stack"
               OpName %116 "p"
               OpName %117 "param"
               OpName %119 "param"
               OpName %152 "i"
               OpName %180 "uv"
               OpName %183 "gl_FragCoord"
               OpName %186 "buf0"
               OpMemberName %186 0 "resolution"
               OpName %188 ""
               OpName %195 "color"
               OpName %324 "_GLF_color"
               OpDecorate %183 BuiltIn FragCoord
               OpMemberDecorate %186 0 Offset 0
               OpDecorate %186 Block
               OpDecorate %188 DescriptorSet 0
               OpDecorate %188 Binding 0
               OpDecorate %324 Location 0
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %6 = OpTypeInt 32 1
          %7 = OpTypePointer Function %6
          %8 = OpTypeFunction %2 %7 %7
         %13 = OpTypeFunction %6 %7 %7
         %21 = OpTypeInt 32 0
         %22 = OpConstant %21 10
         %23 = OpTypeArray %6 %22
         %24 = OpTypeStruct %23
         %25 = OpTypePointer Private %24
         %26 = OpVariable %25 Private
         %27 = OpConstant %6 0
         %29 = OpTypePointer Private %6
         %46 = OpConstant %6 1
         %58 = OpTypeBool
         %88 = OpConstant %6 9
         %90 = OpConstant %6 -1
         %91 = OpTypePointer Function %23
        %159 = OpConstant %6 10
        %177 = OpTypeFloat 32
        %178 = OpTypeVector %177 2
        %179 = OpTypePointer Function %178
        %181 = OpTypeVector %177 4
        %182 = OpTypePointer Input %181
        %183 = OpVariable %182 Input
        %186 = OpTypeStruct %178
        %187 = OpTypePointer Uniform %186
        %188 = OpVariable %187 Uniform
        %189 = OpTypePointer Uniform %178
        %193 = OpTypeVector %177 3
        %194 = OpTypePointer Function %193
        %196 = OpConstant %177 1
        %197 = OpConstant %177 2
        %198 = OpConstant %177 3
        %199 = OpConstantComposite %193 %196 %197 %198
        %203 = OpConstant %21 0
        %204 = OpTypePointer Function %177
        %211 = OpConstant %177 0.25
        %224 = OpConstant %177 0.5
        %228 = OpConstant %6 2
        %232 = OpConstant %21 1
        %239 = OpConstant %177 0.75
        %243 = OpConstant %6 3
        %247 = OpConstant %21 2
        %252 = OpConstant %6 4
        %265 = OpConstant %6 5
        %278 = OpConstant %6 6
        %291 = OpConstant %6 7
        %299 = OpConstant %6 8
        %323 = OpTypePointer Output %181
        %324 = OpVariable %323 Output
          %4 = OpFunction %2 None %3
          %5 = OpLabel
        %152 = OpVariable %7 Function
        %180 = OpVariable %179 Function
        %195 = OpVariable %194 Function
               OpStore %152 %27
               OpBranch %153
        %153 = OpLabel
               OpLoopMerge %155 %156 None
               OpBranch %157
        %157 = OpLabel
        %158 = OpLoad %6 %152
        %160 = OpSLessThan %58 %158 %159
               OpBranchConditional %160 %154 %155
        %154 = OpLabel
        %161 = OpLoad %6 %152
        %162 = OpLoad %6 %152
        %163 = OpISub %6 %159 %162
        %164 = OpAccessChain %29 %26 %27 %161
               OpStore %164 %163
        %165 = OpLoad %6 %152
        %166 = OpLoad %6 %152
        %167 = OpAccessChain %29 %26 %27 %166
        %168 = OpLoad %6 %167
        %169 = OpLoad %6 %152
        %170 = OpAccessChain %29 %26 %27 %169
        %171 = OpLoad %6 %170
        %172 = OpIMul %6 %168 %171
        %173 = OpAccessChain %29 %26 %27 %165
               OpStore %173 %172
               OpBranch %156
        %156 = OpLabel
        %174 = OpLoad %6 %152
        %175 = OpIAdd %6 %174 %46
               OpStore %152 %175
               OpBranch %153
        %155 = OpLabel
        %176 = OpFunctionCall %2 %18
        %184 = OpLoad %181 %183
        %185 = OpVectorShuffle %178 %184 %184 0 1
        %190 = OpAccessChain %189 %188 %27
        %191 = OpLoad %178 %190
        %192 = OpFDiv %178 %185 %191
               OpStore %180 %192
               OpStore %195 %199
        %200 = OpAccessChain %29 %26 %27 %27
        %201 = OpLoad %6 %200
        %202 = OpConvertSToF %177 %201
        %205 = OpAccessChain %204 %195 %203
        %206 = OpLoad %177 %205
        %207 = OpFAdd %177 %206 %202
        %208 = OpAccessChain %204 %195 %203
               OpStore %208 %207
        %209 = OpAccessChain %204 %180 %203
        %210 = OpLoad %177 %209
        %212 = OpFOrdGreaterThan %58 %210 %211
               OpSelectionMerge %214 None
               OpBranchConditional %212 %213 %214
        %213 = OpLabel
        %215 = OpAccessChain %29 %26 %27 %46
        %216 = OpLoad %6 %215
        %217 = OpConvertSToF %177 %216
        %218 = OpAccessChain %204 %195 %203
        %219 = OpLoad %177 %218
        %220 = OpFAdd %177 %219 %217
        %221 = OpAccessChain %204 %195 %203
               OpStore %221 %220
               OpBranch %214
        %214 = OpLabel
        %222 = OpAccessChain %204 %180 %203
        %223 = OpLoad %177 %222
        %225 = OpFOrdGreaterThan %58 %223 %224
               OpSelectionMerge %227 None
               OpBranchConditional %225 %226 %227
        %226 = OpLabel
        %229 = OpAccessChain %29 %26 %27 %228
        %230 = OpLoad %6 %229
        %231 = OpConvertSToF %177 %230
        %233 = OpAccessChain %204 %195 %232
        %234 = OpLoad %177 %233
        %235 = OpFAdd %177 %234 %231
        %236 = OpAccessChain %204 %195 %232
               OpStore %236 %235
               OpBranch %227
        %227 = OpLabel
        %237 = OpAccessChain %204 %180 %203
        %238 = OpLoad %177 %237
        %240 = OpFOrdGreaterThan %58 %238 %239
               OpSelectionMerge %242 None
               OpBranchConditional %240 %241 %242
        %241 = OpLabel
        %244 = OpAccessChain %29 %26 %27 %243
        %245 = OpLoad %6 %244
        %246 = OpConvertSToF %177 %245
        %248 = OpAccessChain %204 %195 %247
        %249 = OpLoad %177 %248
        %250 = OpFAdd %177 %249 %246
        %251 = OpAccessChain %204 %195 %247
               OpStore %251 %250
               OpBranch %242
        %242 = OpLabel
        %253 = OpAccessChain %29 %26 %27 %252
        %254 = OpLoad %6 %253
        %255 = OpConvertSToF %177 %254
        %256 = OpAccessChain %204 %195 %232
        %257 = OpLoad %177 %256
        %258 = OpFAdd %177 %257 %255
        %259 = OpAccessChain %204 %195 %232
               OpStore %259 %258
        %260 = OpAccessChain %204 %180 %232
        %261 = OpLoad %177 %260
        %262 = OpFOrdGreaterThan %58 %261 %211
               OpSelectionMerge %264 None
               OpBranchConditional %262 %263 %264
        %263 = OpLabel
        %266 = OpAccessChain %29 %26 %27 %265
        %267 = OpLoad %6 %266
        %268 = OpConvertSToF %177 %267
        %269 = OpAccessChain %204 %195 %203
        %270 = OpLoad %177 %269
        %271 = OpFAdd %177 %270 %268
        %272 = OpAccessChain %204 %195 %203
               OpStore %272 %271
               OpBranch %264
        %264 = OpLabel
        %273 = OpAccessChain %204 %180 %232
        %274 = OpLoad %177 %273
        %275 = OpFOrdGreaterThan %58 %274 %224
               OpSelectionMerge %277 None
               OpBranchConditional %275 %276 %277
        %276 = OpLabel
        %279 = OpAccessChain %29 %26 %27 %278
        %280 = OpLoad %6 %279
        %281 = OpConvertSToF %177 %280
        %282 = OpAccessChain %204 %195 %232
        %283 = OpLoad %177 %282
        %284 = OpFAdd %177 %283 %281
        %285 = OpAccessChain %204 %195 %232
               OpStore %285 %284
               OpBranch %277
        %277 = OpLabel
        %286 = OpAccessChain %204 %180 %232
        %287 = OpLoad %177 %286
        %288 = OpFOrdGreaterThan %58 %287 %239
               OpSelectionMerge %290 None
               OpBranchConditional %288 %289 %290
        %289 = OpLabel
        %292 = OpAccessChain %29 %26 %27 %291
        %293 = OpLoad %6 %292
        %294 = OpConvertSToF %177 %293
        %295 = OpAccessChain %204 %195 %247
        %296 = OpLoad %177 %295
        %297 = OpFAdd %177 %296 %294
        %298 = OpAccessChain %204 %195 %247
               OpStore %298 %297
               OpBranch %290
        %290 = OpLabel
        %300 = OpAccessChain %29 %26 %27 %299
        %301 = OpLoad %6 %300
        %302 = OpConvertSToF %177 %301
        %303 = OpAccessChain %204 %195 %247
        %304 = OpLoad %177 %303
        %305 = OpFAdd %177 %304 %302
        %306 = OpAccessChain %204 %195 %247
               OpStore %306 %305
        %307 = OpAccessChain %204 %180 %203
        %308 = OpLoad %177 %307
        %309 = OpAccessChain %204 %180 %232
        %310 = OpLoad %177 %309
        %311 = OpFSub %177 %308 %310
        %312 = OpExtInst %177 %1 FAbs %311
        %313 = OpFOrdLessThan %58 %312 %211
               OpSelectionMerge %315 None
               OpBranchConditional %313 %314 %315
        %314 = OpLabel
        %316 = OpAccessChain %29 %26 %27 %88
        %317 = OpLoad %6 %316
        %318 = OpConvertSToF %177 %317
        %319 = OpAccessChain %204 %195 %203
        %320 = OpLoad %177 %319
        %321 = OpFAdd %177 %320 %318
        %322 = OpAccessChain %204 %195 %203
               OpStore %322 %321
               OpBranch %315
        %315 = OpLabel
        %325 = OpLoad %193 %195
        %326 = OpExtInst %193 %1 Normalize %325
        %327 = OpCompositeExtract %177 %326 0
        %328 = OpCompositeExtract %177 %326 1
        %329 = OpCompositeExtract %177 %326 2
        %330 = OpCompositeConstruct %181 %327 %328 %329 %196
               OpStore %324 %330
               OpReturn
               OpFunctionEnd
         %11 = OpFunction %2 None %8
          %9 = OpFunctionParameter %7
         %10 = OpFunctionParameter %7
         %12 = OpLabel
         %20 = OpVariable %7 Function
         %28 = OpLoad %6 %9
         %30 = OpAccessChain %29 %26 %27 %28
         %31 = OpLoad %6 %30
               OpStore %20 %31
         %32 = OpLoad %6 %9
         %33 = OpLoad %6 %10
         %34 = OpAccessChain %29 %26 %27 %33
         %35 = OpLoad %6 %34
         %36 = OpAccessChain %29 %26 %27 %32
               OpStore %36 %35
         %37 = OpLoad %6 %10
         %38 = OpLoad %6 %20
         %39 = OpAccessChain %29 %26 %27 %37
               OpStore %39 %38
               OpReturn
               OpFunctionEnd
         %16 = OpFunction %6 None %13
         %14 = OpFunctionParameter %7
         %15 = OpFunctionParameter %7
         %17 = OpLabel
         %40 = OpVariable %7 Function
         %44 = OpVariable %7 Function
         %48 = OpVariable %7 Function
         %69 = OpVariable %7 Function
         %71 = OpVariable %7 Function
         %78 = OpVariable %7 Function
         %80 = OpVariable %7 Function
         %41 = OpLoad %6 %15
         %42 = OpAccessChain %29 %26 %27 %41
         %43 = OpLoad %6 %42
               OpStore %40 %43
         %45 = OpLoad %6 %14
         %47 = OpISub %6 %45 %46
               OpStore %44 %47
         %49 = OpLoad %6 %14
               OpStore %48 %49
               OpBranch %50
         %50 = OpLabel
               OpLoopMerge %52 %53 None
               OpBranch %54
         %54 = OpLabel
         %55 = OpLoad %6 %48
         %56 = OpLoad %6 %15
         %57 = OpISub %6 %56 %46
         %59 = OpSLessThanEqual %58 %55 %57
               OpBranchConditional %59 %51 %52
         %51 = OpLabel
         %60 = OpLoad %6 %48
         %61 = OpAccessChain %29 %26 %27 %60
         %62 = OpLoad %6 %61
         %63 = OpLoad %6 %40
         %64 = OpSLessThanEqual %58 %62 %63
               OpSelectionMerge %66 None
               OpBranchConditional %64 %65 %66
         %65 = OpLabel
         %67 = OpLoad %6 %44
         %68 = OpIAdd %6 %67 %46
               OpStore %44 %68
         %70 = OpLoad %6 %44
               OpStore %69 %70
         %72 = OpLoad %6 %48
               OpStore %71 %72
         %73 = OpFunctionCall %2 %11 %69 %71
               OpBranch %66
         %66 = OpLabel
               OpBranch %53
         %53 = OpLabel
         %74 = OpLoad %6 %48
         %75 = OpIAdd %6 %74 %46
               OpStore %48 %75
               OpBranch %50
         %52 = OpLabel
         %76 = OpLoad %6 %44
         %77 = OpIAdd %6 %76 %46
               OpStore %44 %77
         %79 = OpLoad %6 %44
               OpStore %78 %79
         %81 = OpLoad %6 %15
               OpStore %80 %81
         %82 = OpFunctionCall %2 %11 %78 %80
         %83 = OpLoad %6 %44
               OpReturnValue %83
               OpFunctionEnd
         %18 = OpFunction %2 None %3
         %19 = OpLabel
         %86 = OpVariable %7 Function
         %87 = OpVariable %7 Function
         %89 = OpVariable %7 Function
         %92 = OpVariable %91 Function
        %116 = OpVariable %7 Function
        %117 = OpVariable %7 Function
        %119 = OpVariable %7 Function
               OpStore %86 %27
               OpStore %87 %88
               OpStore %89 %90
         %93 = OpLoad %6 %89
         %94 = OpIAdd %6 %93 %46
               OpStore %89 %94
         %95 = OpLoad %6 %86
         %96 = OpAccessChain %7 %92 %94
               OpStore %96 %95
         %97 = OpLoad %6 %89
         %98 = OpIAdd %6 %97 %46
               OpStore %89 %98
         %99 = OpLoad %6 %87
        %100 = OpAccessChain %7 %92 %98
               OpStore %100 %99
               OpBranch %101
        %101 = OpLabel
               OpLoopMerge %103 %104 None
               OpBranch %105
        %105 = OpLabel
        %106 = OpLoad %6 %89
        %107 = OpSGreaterThanEqual %58 %106 %27
               OpBranchConditional %107 %102 %103
        %102 = OpLabel
        %108 = OpLoad %6 %89
        %109 = OpISub %6 %108 %46
               OpStore %89 %109
        %110 = OpAccessChain %7 %92 %108
        %111 = OpLoad %6 %110
               OpStore %87 %111
        %112 = OpLoad %6 %89
        %113 = OpISub %6 %112 %46
               OpStore %89 %113
        %114 = OpAccessChain %7 %92 %112
        %115 = OpLoad %6 %114
               OpStore %86 %115
        %118 = OpLoad %6 %86
               OpStore %117 %118
        %120 = OpLoad %6 %87
               OpStore %119 %120
        %121 = OpFunctionCall %6 %16 %117 %119
               OpStore %116 %121
        %122 = OpLoad %6 %116
        %123 = OpISub %6 %122 %46
        %124 = OpLoad %6 %86
        %125 = OpSGreaterThan %58 %123 %124
               OpSelectionMerge %127 None
               OpBranchConditional %125 %126 %127
        %126 = OpLabel
        %128 = OpLoad %6 %89
        %129 = OpIAdd %6 %128 %46
               OpStore %89 %129
        %130 = OpLoad %6 %86
        %131 = OpAccessChain %7 %92 %129
               OpStore %131 %130
        %132 = OpLoad %6 %89
        %133 = OpIAdd %6 %132 %46
               OpStore %89 %133
        %134 = OpLoad %6 %116
        %135 = OpISub %6 %134 %46
        %136 = OpAccessChain %7 %92 %133
               OpStore %136 %135
               OpBranch %127
        %127 = OpLabel
        %137 = OpLoad %6 %116
        %138 = OpIAdd %6 %137 %46
        %139 = OpLoad %6 %87
        %140 = OpSLessThan %58 %138 %139
               OpSelectionMerge %142 None
               OpBranchConditional %140 %141 %142
        %141 = OpLabel
        %143 = OpLoad %6 %89
        %144 = OpIAdd %6 %143 %46
               OpStore %89 %144
        %145 = OpLoad %6 %116
        %146 = OpIAdd %6 %145 %46
        %147 = OpAccessChain %7 %92 %144
               OpStore %147 %146
        %148 = OpLoad %6 %89
        %149 = OpIAdd %6 %148 %46
               OpStore %89 %149
        %150 = OpLoad %6 %87
        %151 = OpAccessChain %7 %92 %149
               OpStore %151 %150
               OpBranch %142
        %142 = OpLabel
               OpBranch %104
        %104 = OpLabel
               OpBranch %101
        %103 = OpLabel
               OpReturn
               OpFunctionEnd
END

# uniforms for reference

# resolution
BUFFER reference_resolution DATA_TYPE vec2<float> STD140 DATA
 256.0 256.0
END

BUFFER reference_framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics reference_pipeline
  ATTACH reference_vertex_shader
  ATTACH reference_fragment_shader
  FRAMEBUFFER_SIZE 256 256
  BIND BUFFER reference_framebuffer AS color LOCATION 0
  BIND BUFFER reference_resolution AS uniform DESCRIPTOR_SET 0 BINDING 0
END
CLEAR_COLOR reference_pipeline 0 0 0 255

CLEAR reference_pipeline
RUN reference_pipeline DRAW_RECT POS 0 0 SIZE 256 256


SHADER vertex variant_vertex_shader PASSTHROUGH

SHADER fragment variant_fragment_shader SPIRV-ASM TARGET_ENV spv1.0
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 331
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %4 "main" %183 %324
               OpExecutionMode %4 OriginUpperLeft
               OpSource ESSL 320
               OpName %4 "main"
               OpName %11 "swap(i1;i1;"
               OpName %9 "i"
               OpName %10 "j"
               OpName %16 "performPartition(i1;i1;"
               OpName %14 "l"
               OpName %15 "h"
               OpName %18 "quicksort("
               OpName %20 "temp"
               OpName %24 "QuicksortObject"
               OpMemberName %24 0 "numbers"
               OpName %26 "obj"
               OpName %40 "pivot"
               OpName %44 "i"
               OpName %48 "j"
               OpName %69 "param"
               OpName %71 "param"
               OpName %78 "param"
               OpName %80 "param"
               OpName %86 "l"
               OpName %87 "h"
               OpName %89 "top"
               OpName %92 "stack"
               OpName %116 "p"
               OpName %117 "param"
               OpName %119 "param"
               OpName %152 "i"
               OpName %180 "uv"
               OpName %183 "gl_FragCoord"
               OpName %186 "buf0"
               OpMemberName %186 0 "resolution"
               OpName %188 ""
               OpName %195 "color"
               OpName %324 "_GLF_color"
               OpDecorate %183 BuiltIn FragCoord
               OpMemberDecorate %186 0 Offset 0
               OpDecorate %186 Block
               OpDecorate %188 DescriptorSet 0
               OpDecorate %188 Binding 0
               OpDecorate %324 Location 0
          %2 = OpTypeVoid
          %3 = OpTypeFunction %2
          %6 = OpTypeInt 32 1
          %7 = OpTypePointer Function %6
          %8 = OpTypeFunction %2 %7 %7
         %13 = OpTypeFunction %6 %7 %7
         %21 = OpTypeInt 32 0
         %22 = OpConstant %21 10
         %23 = OpTypeArray %6 %22
         %24 = OpTypeStruct %23
         %25 = OpTypePointer Private %24
         %26 = OpVariable %25 Private
         %27 = OpConstant %6 0
         %29 = OpTypePointer Private %6
         %46 = OpConstant %6 1
         %58 = OpTypeBool
         %88 = OpConstant %6 9
         %90 = OpConstant %6 -1
         %91 = OpTypePointer Function %23
        %159 = OpConstant %6 10
        %177 = OpTypeFloat 32
        %178 = OpTypeVector %177 2
        %179 = OpTypePointer Function %178
        %181 = OpTypeVector %177 4
        %182 = OpTypePointer Input %181
        %183 = OpVariable %182 Input
        %186 = OpTypeStruct %178
        %187 = OpTypePointer Uniform %186
        %188 = OpVariable %187 Uniform
        %189 = OpTypePointer Uniform %178
        %193 = OpTypeVector %177 3
        %194 = OpTypePointer Function %193
        %196 = OpConstant %177 1
        %197 = OpConstant %177 2
        %198 = OpConstant %177 3
        %199 = OpConstantComposite %193 %196 %197 %198
        %203 = OpConstant %21 0
        %204 = OpTypePointer Function %177
        %211 = OpConstant %177 0.25
        %224 = OpConstant %177 0.5
        %228 = OpConstant %6 2
        %232 = OpConstant %21 1
        %239 = OpConstant %177 0.75
        %243 = OpConstant %6 3
        %247 = OpConstant %21 2
        %252 = OpConstant %6 4
        %265 = OpConstant %6 5
        %278 = OpConstant %6 6
        %291 = OpConstant %6 7
        %299 = OpConstant %6 8
        %323 = OpTypePointer Output %181
        %324 = OpVariable %323 Output
          %4 = OpFunction %2 None %3
          %5 = OpLabel
        %152 = OpVariable %7 Function
        %180 = OpVariable %179 Function
        %195 = OpVariable %194 Function
               OpStore %152 %27
               OpBranch %153
        %153 = OpLabel
               OpLoopMerge %155 %156 None
               OpBranch %157
        %157 = OpLabel
        %158 = OpLoad %6 %152
        %160 = OpSLessThan %58 %158 %159
               OpBranchConditional %160 %154 %155
        %154 = OpLabel
        %161 = OpLoad %6 %152
        %162 = OpLoad %6 %152
        %163 = OpISub %6 %159 %162
        %164 = OpAccessChain %29 %26 %27 %161
               OpStore %164 %163
        %165 = OpLoad %6 %152
        %166 = OpLoad %6 %152
        %167 = OpAccessChain %29 %26 %27 %166
        %168 = OpLoad %6 %167
        %169 = OpLoad %6 %152
        %170 = OpAccessChain %29 %26 %27 %169
        %171 = OpLoad %6 %170
        %172 = OpIMul %6 %168 %171
        %173 = OpAccessChain %29 %26 %27 %165
               OpStore %173 %172
               OpBranch %156
        %156 = OpLabel
        %174 = OpLoad %6 %152
        %175 = OpIAdd %6 %174 %46
               OpStore %152 %175
               OpBranch %153
        %155 = OpLabel
        %176 = OpFunctionCall %2 %18
        %184 = OpLoad %181 %183
        %185 = OpVectorShuffle %178 %184 %184 0 1
        %190 = OpAccessChain %189 %188 %27
        %191 = OpLoad %178 %190
        %192 = OpFDiv %178 %185 %191
               OpStore %180 %192
               OpStore %195 %199
        %200 = OpAccessChain %29 %26 %27 %27
        %201 = OpLoad %6 %200
        %202 = OpConvertSToF %177 %201
        %205 = OpAccessChain %204 %195 %203
        %206 = OpLoad %177 %205
        %207 = OpFAdd %177 %206 %202
        %208 = OpAccessChain %204 %195 %203
               OpStore %208 %207
        %209 = OpAccessChain %204 %180 %203
        %210 = OpLoad %177 %209
        %212 = OpFOrdGreaterThan %58 %210 %211
               OpSelectionMerge %214 None
               OpBranchConditional %212 %213 %214
        %213 = OpLabel
        %215 = OpAccessChain %29 %26 %27 %46
        %216 = OpLoad %6 %215
        %217 = OpConvertSToF %177 %216
        %218 = OpAccessChain %204 %195 %203
        %219 = OpLoad %177 %218
        %220 = OpFAdd %177 %219 %217
        %221 = OpAccessChain %204 %195 %203
               OpStore %221 %220
               OpBranch %214
        %214 = OpLabel
        %222 = OpAccessChain %204 %180 %203
        %223 = OpLoad %177 %222
        %225 = OpFOrdGreaterThan %58 %223 %224
               OpSelectionMerge %227 None
               OpBranchConditional %225 %226 %227
        %226 = OpLabel
        %229 = OpAccessChain %29 %26 %27 %228
        %230 = OpLoad %6 %229
        %231 = OpConvertSToF %177 %230
        %233 = OpAccessChain %204 %195 %232
        %234 = OpLoad %177 %233
        %235 = OpFAdd %177 %234 %231
        %236 = OpAccessChain %204 %195 %232
               OpStore %236 %235
               OpBranch %227
        %227 = OpLabel
        %237 = OpAccessChain %204 %180 %203
        %238 = OpLoad %177 %237
        %240 = OpFOrdGreaterThan %58 %238 %239
               OpSelectionMerge %242 None
               OpBranchConditional %240 %241 %242
        %241 = OpLabel
        %244 = OpAccessChain %29 %26 %27 %243
        %245 = OpLoad %6 %244
        %246 = OpConvertSToF %177 %245
        %248 = OpAccessChain %204 %195 %247
        %249 = OpLoad %177 %248
        %250 = OpFAdd %177 %249 %246
        %251 = OpAccessChain %204 %195 %247
               OpStore %251 %250
               OpBranch %242
        %242 = OpLabel
        %253 = OpAccessChain %29 %26 %27 %252
        %254 = OpLoad %6 %253
        %255 = OpConvertSToF %177 %254
        %256 = OpAccessChain %204 %195 %232
        %257 = OpLoad %177 %256
        %258 = OpFAdd %177 %257 %255
        %259 = OpAccessChain %204 %195 %232
               OpStore %259 %258
        %260 = OpAccessChain %204 %180 %232
        %261 = OpLoad %177 %260
        %262 = OpFOrdGreaterThan %58 %261 %211
               OpSelectionMerge %264 None
               OpBranchConditional %262 %263 %264
        %263 = OpLabel
        %266 = OpAccessChain %29 %26 %27 %265
        %267 = OpLoad %6 %266
        %268 = OpConvertSToF %177 %267
        %269 = OpAccessChain %204 %195 %203
        %270 = OpLoad %177 %269
        %271 = OpFAdd %177 %270 %268
        %272 = OpAccessChain %204 %195 %203
               OpStore %272 %271
               OpBranch %264
        %264 = OpLabel
        %273 = OpAccessChain %204 %180 %232
        %274 = OpLoad %177 %273
        %275 = OpFOrdGreaterThan %58 %274 %224
               OpSelectionMerge %277 None
               OpBranchConditional %275 %276 %277
        %276 = OpLabel
        %279 = OpAccessChain %29 %26 %27 %278
        %280 = OpLoad %6 %279
        %281 = OpConvertSToF %177 %280
        %282 = OpAccessChain %204 %195 %232
        %283 = OpLoad %177 %282
        %284 = OpFAdd %177 %283 %281
        %285 = OpAccessChain %204 %195 %232
               OpStore %285 %284
               OpBranch %277
        %277 = OpLabel
        %286 = OpAccessChain %204 %180 %232
        %287 = OpLoad %177 %286
        %288 = OpFOrdGreaterThan %58 %287 %239
               OpSelectionMerge %290 None
               OpBranchConditional %288 %289 %290
        %289 = OpLabel
        %292 = OpAccessChain %29 %26 %27 %291
        %293 = OpLoad %6 %292
        %294 = OpConvertSToF %177 %293
        %295 = OpAccessChain %204 %195 %247
        %296 = OpLoad %177 %295
        %297 = OpFAdd %177 %296 %294
        %298 = OpAccessChain %204 %195 %247
               OpStore %298 %297
               OpBranch %290
        %290 = OpLabel
        %300 = OpAccessChain %29 %26 %27 %299
        %301 = OpLoad %6 %300
        %302 = OpConvertSToF %177 %301
        %303 = OpAccessChain %204 %195 %247
        %304 = OpLoad %177 %303
        %305 = OpFAdd %177 %304 %302
        %306 = OpAccessChain %204 %195 %247
               OpStore %306 %305
        %307 = OpAccessChain %204 %180 %203
        %308 = OpLoad %177 %307
        %309 = OpAccessChain %204 %180 %232
        %310 = OpLoad %177 %309
        %311 = OpFSub %177 %308 %310
        %312 = OpExtInst %177 %1 FAbs %311
        %313 = OpFOrdLessThan %58 %312 %211
               OpSelectionMerge %315 None
               OpBranchConditional %313 %314 %315
        %314 = OpLabel
        %316 = OpAccessChain %29 %26 %27 %88
        %317 = OpLoad %6 %316
        %318 = OpConvertSToF %177 %317
        %319 = OpAccessChain %204 %195 %203
        %320 = OpLoad %177 %319
        %321 = OpFAdd %177 %320 %318
        %322 = OpAccessChain %204 %195 %203
               OpStore %322 %321
               OpBranch %315
        %315 = OpLabel
        %325 = OpLoad %193 %195
        %326 = OpExtInst %193 %1 Normalize %325
        %327 = OpCompositeExtract %177 %326 0
        %328 = OpCompositeExtract %177 %326 1
        %329 = OpCompositeExtract %177 %326 2
        %330 = OpCompositeConstruct %181 %327 %328 %329 %196
               OpStore %324 %330
               OpReturn
               OpFunctionEnd
         %11 = OpFunction %2 None %8
          %9 = OpFunctionParameter %7
         %10 = OpFunctionParameter %7
         %12 = OpLabel
         %20 = OpVariable %7 Function
         %28 = OpLoad %6 %9
         %30 = OpAccessChain %29 %26 %27 %28
         %31 = OpLoad %6 %30
               OpStore %20 %31
         %32 = OpLoad %6 %9
         %33 = OpLoad %6 %10
         %34 = OpAccessChain %29 %26 %27 %33
         %35 = OpLoad %6 %34
         %36 = OpAccessChain %29 %26 %27 %32
               OpStore %36 %35
         %37 = OpLoad %6 %10
         %38 = OpLoad %6 %20
         %39 = OpAccessChain %29 %26 %27 %37
               OpStore %39 %38
               OpReturn
               OpFunctionEnd
         %16 = OpFunction %6 DontInline %13
         %14 = OpFunctionParameter %7
         %15 = OpFunctionParameter %7
         %17 = OpLabel
         %40 = OpVariable %7 Function
         %44 = OpVariable %7 Function
         %48 = OpVariable %7 Function
         %69 = OpVariable %7 Function
         %71 = OpVariable %7 Function
         %78 = OpVariable %7 Function
         %80 = OpVariable %7 Function
         %41 = OpLoad %6 %15
         %42 = OpAccessChain %29 %26 %27 %41
         %43 = OpLoad %6 %42
               OpStore %40 %43
         %45 = OpLoad %6 %14
         %47 = OpISub %6 %45 %46
               OpStore %44 %47
         %49 = OpLoad %6 %14
               OpStore %48 %49
               OpBranch %50
         %50 = OpLabel
               OpLoopMerge %52 %53 None
               OpBranch %54
         %54 = OpLabel
         %55 = OpLoad %6 %48
         %56 = OpLoad %6 %15
         %57 = OpISub %6 %56 %46
         %59 = OpSLessThanEqual %58 %55 %57
               OpBranchConditional %59 %51 %52
         %51 = OpLabel
         %60 = OpLoad %6 %48
         %61 = OpAccessChain %29 %26 %27 %60
         %62 = OpLoad %6 %61
         %63 = OpLoad %6 %40
         %64 = OpSLessThanEqual %58 %62 %63
               OpSelectionMerge %66 None
               OpBranchConditional %64 %65 %66
         %65 = OpLabel
         %67 = OpLoad %6 %44
         %68 = OpIAdd %6 %67 %46
               OpStore %44 %68
         %70 = OpLoad %6 %44
               OpStore %69 %70
         %72 = OpLoad %6 %48
               OpStore %71 %72
         %73 = OpFunctionCall %2 %11 %69 %71
               OpBranch %66
         %66 = OpLabel
               OpBranch %53
         %53 = OpLabel
         %74 = OpLoad %6 %48
         %75 = OpIAdd %6 %74 %46
               OpStore %48 %75
               OpBranch %50
         %52 = OpLabel
         %76 = OpLoad %6 %44
         %77 = OpIAdd %6 %76 %46
               OpStore %44 %77
         %79 = OpLoad %6 %44
               OpStore %78 %79
         %81 = OpLoad %6 %15
               OpStore %80 %81
         %82 = OpFunctionCall %2 %11 %78 %80
         %83 = OpLoad %6 %44
               OpReturnValue %83
               OpFunctionEnd
         %18 = OpFunction %2 None %3
         %19 = OpLabel
         %86 = OpVariable %7 Function
         %87 = OpVariable %7 Function
         %89 = OpVariable %7 Function
         %92 = OpVariable %91 Function
        %116 = OpVariable %7 Function
        %117 = OpVariable %7 Function
        %119 = OpVariable %7 Function
               OpStore %86 %27
               OpStore %87 %88
               OpStore %89 %90
         %93 = OpLoad %6 %89
         %94 = OpIAdd %6 %93 %46
               OpStore %89 %94
         %95 = OpLoad %6 %86
         %96 = OpAccessChain %7 %92 %94
               OpStore %96 %95
         %97 = OpLoad %6 %89
         %98 = OpIAdd %6 %97 %46
               OpStore %89 %98
         %99 = OpLoad %6 %87
        %100 = OpAccessChain %7 %92 %98
               OpStore %100 %99
               OpBranch %101
        %101 = OpLabel
               OpLoopMerge %103 %104 None
               OpBranch %105
        %105 = OpLabel
        %106 = OpLoad %6 %89
        %107 = OpSGreaterThanEqual %58 %106 %27
               OpBranchConditional %107 %102 %103
        %102 = OpLabel
        %108 = OpLoad %6 %89
        %109 = OpISub %6 %108 %46
               OpStore %89 %109
        %110 = OpAccessChain %7 %92 %108
        %111 = OpLoad %6 %110
               OpStore %87 %111
        %112 = OpLoad %6 %89
        %113 = OpISub %6 %112 %46
               OpStore %89 %113
        %114 = OpAccessChain %7 %92 %112
        %115 = OpLoad %6 %114
               OpStore %86 %115
        %118 = OpLoad %6 %86
               OpStore %117 %118
        %120 = OpLoad %6 %87
               OpStore %119 %120
        %121 = OpFunctionCall %6 %16 %117 %119
               OpStore %116 %121
        %122 = OpLoad %6 %116
        %123 = OpISub %6 %122 %46
        %124 = OpLoad %6 %86
        %125 = OpSGreaterThan %58 %123 %124
               OpSelectionMerge %127 None
               OpBranchConditional %125 %126 %127
        %126 = OpLabel
        %128 = OpLoad %6 %89
        %129 = OpIAdd %6 %128 %46
               OpStore %89 %129
        %130 = OpLoad %6 %86
        %131 = OpAccessChain %7 %92 %129
               OpStore %131 %130
        %132 = OpLoad %6 %89
        %133 = OpIAdd %6 %132 %46
               OpStore %89 %133
        %134 = OpLoad %6 %116
        %135 = OpISub %6 %134 %46
        %136 = OpAccessChain %7 %92 %133
               OpStore %136 %135
               OpBranch %127
        %127 = OpLabel
        %137 = OpLoad %6 %116
        %138 = OpIAdd %6 %137 %46
        %139 = OpLoad %6 %87
        %140 = OpSLessThan %58 %138 %139
               OpSelectionMerge %142 None
               OpBranchConditional %140 %141 %142
        %141 = OpLabel
        %143 = OpLoad %6 %89
        %144 = OpIAdd %6 %143 %46
               OpStore %89 %144
        %145 = OpLoad %6 %116
        %146 = OpIAdd %6 %145 %46
        %147 = OpAccessChain %7 %92 %144
               OpStore %147 %146
        %148 = OpLoad %6 %89
        %149 = OpIAdd %6 %148 %46
               OpStore %89 %149
        %150 = OpLoad %6 %87
        %151 = OpAccessChain %7 %92 %149
               OpStore %151 %150
               OpBranch %142
        %142 = OpLabel
               OpBranch %104
        %104 = OpLabel
               OpBranch %101
        %103 = OpLabel
               OpReturn
               OpFunctionEnd
END

# uniforms for variant

# resolution
BUFFER variant_resolution DATA_TYPE vec2<float> STD140 DATA
 256.0 256.0
END

BUFFER variant_framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics variant_pipeline
  ATTACH variant_vertex_shader
  ATTACH variant_fragment_shader
  FRAMEBUFFER_SIZE 256 256
  BIND BUFFER variant_framebuffer AS color LOCATION 0
  BIND BUFFER variant_resolution AS uniform DESCRIPTOR_SET 0 BINDING 0
END
CLEAR_COLOR variant_pipeline 0 0 0 255

CLEAR variant_pipeline
RUN variant_pipeline DRAW_RECT POS 0 0 SIZE 256 256

EXPECT reference_framebuffer EQ_HISTOGRAM_EMD_BUFFER variant_framebuffer TOLERANCE 0.005
