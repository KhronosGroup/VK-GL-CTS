#!amber

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A vertex shader test for FrexpStruct.

DEVICE_FEATURE vertexPipelineStoresAndAtomics

# SHADER vertex vert_shader GLSL
# #version 430
# precision highp float;
#
# const uint ndp = 1296;
# const uint ndpSqrt = uint(sqrt(ndp));
# const float halfGridElementSize = 1.0 / float(ndpSqrt);
#
# layout (location = 0) in vec2 position;
# layout (location = 0) flat out float frexp_x_out;
# layout (location = 1) flat out float frexp_exp_out;
# layout (location = 2) flat out float frexpStruct_x_out;
# layout (location = 3) flat out float frexpStruct_exp_out;
#
# layout(set = 0, binding = 0) readonly buffer block0 {
#     uint in_values[ndp];
# };
#
# struct frexpStructType
# {
#     float x;
#     int exp;
# };
#
# // Replaced with native function in SPIR-V.
# frexpStructType frexpStruct (float orig)
# {
#     float x;
#     int exp;
#     x = frexp(orig, exp);
#     frexpStructType res = { x, exp };
#     return res;
# }
#
# void main ()
# {
#     uint xcoord = uint(ndpSqrt * ((position.x + halfGridElementSize + 1) / 2) - 1);
#     uint ycoord = uint(ndpSqrt * ((position.y + halfGridElementSize + 1) / 2) - 1);
#     uint ndx = xcoord + ycoord * ndpSqrt;
#
#     uint in_uint = in_values[ndx];
#     float in_float = uintBitsToFloat(in_uint);
#     float x;
#     int exp;
#     frexpStructType res;
#
#     x = frexp(in_float, exp);
#     res = frexpStruct(in_float);
#
#     frexp_x_out = x;
#     frexp_exp_out = intBitsToFloat(exp);
#     frexpStruct_x_out = res.x;
#     frexpStruct_exp_out = intBitsToFloat(res.exp);
#
#     gl_Position = vec4(position, 0, 1);
#
#     return;
# }
# END

SHADER vertex vert_shader SPIRV-ASM
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %position %frexp_x_out %frexp_exp_out %frexpStruct_x_out %frexpStruct_exp_out %__0
               OpDecorate %position Location 0
               OpDecorate %_arr_uint_uint_1296 ArrayStride 4
               OpMemberDecorate %block0 0 NonWritable
               OpMemberDecorate %block0 0 Offset 0
               OpDecorate %block0 BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %frexp_x_out Flat
               OpDecorate %frexp_x_out Location 0
               OpDecorate %frexp_exp_out Flat
               OpDecorate %frexp_exp_out Location 1
               OpDecorate %frexpStruct_x_out Flat
               OpDecorate %frexpStruct_x_out Location 2
               OpDecorate %frexpStruct_exp_out Flat
               OpDecorate %frexpStruct_exp_out Location 3
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpDecorate %gl_PerVertex Block
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
%_ptr_Function_float = OpTypePointer Function %float
        %int = OpTypeInt 32 1
%frexpStructType = OpTypeStruct %float %int
         %10 = OpTypeFunction %frexpStructType %_ptr_Function_float
%_ptr_Function_int = OpTypePointer Function %int
%_ptr_Function_frexpStructType = OpTypePointer Function %frexpStructType
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
   %float_36 = OpConstant %float 36
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
   %position = OpVariable %_ptr_Input_v2float Input
     %uint_0 = OpConstant %uint 0
%_ptr_Input_float = OpTypePointer Input %float
%float_0_027777778 = OpConstant %float 0.027777778
    %float_1 = OpConstant %float 1
    %float_2 = OpConstant %float 2
     %uint_1 = OpConstant %uint 1
    %uint_36 = OpConstant %uint 36
  %uint_1296 = OpConstant %uint 1296
%_arr_uint_uint_1296 = OpTypeArray %uint %uint_1296
     %block0 = OpTypeStruct %_arr_uint_uint_1296
%_ptr_Uniform_block0 = OpTypePointer Uniform %block0
          %_ = OpVariable %_ptr_Uniform_block0 Uniform
      %int_0 = OpConstant %int 0
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
%_ptr_Output_float = OpTypePointer Output %float
%frexp_x_out = OpVariable %_ptr_Output_float Output
%frexp_exp_out = OpVariable %_ptr_Output_float Output
%frexpStruct_x_out = OpVariable %_ptr_Output_float Output
%frexpStruct_exp_out = OpVariable %_ptr_Output_float Output
      %int_1 = OpConstant %int 1
    %v4float = OpTypeVector %float 4
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
        %__0 = OpVariable %_ptr_Output_gl_PerVertex Output
    %float_0 = OpConstant %float 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
       %main = OpFunction %void None %3
          %5 = OpLabel
     %xcoord = OpVariable %_ptr_Function_uint Function
     %ycoord = OpVariable %_ptr_Function_uint Function
        %ndx = OpVariable %_ptr_Function_uint Function
    %in_uint = OpVariable %_ptr_Function_uint Function
   %in_float = OpVariable %_ptr_Function_float Function
        %x_0 = OpVariable %_ptr_Function_float Function
      %exp_0 = OpVariable %_ptr_Function_int Function
      %res_0 = OpVariable %_ptr_Function_frexpStructType Function
         %36 = OpAccessChain %_ptr_Input_float %position %uint_0
         %37 = OpLoad %float %36
         %39 = OpFAdd %float %37 %float_0_027777778
         %41 = OpFAdd %float %39 %float_1
         %43 = OpFDiv %float %41 %float_2
         %44 = OpFMul %float %float_36 %43
         %45 = OpFSub %float %44 %float_1
         %46 = OpConvertFToU %uint %45
               OpStore %xcoord %46
         %49 = OpAccessChain %_ptr_Input_float %position %uint_1
         %50 = OpLoad %float %49
         %51 = OpFAdd %float %50 %float_0_027777778
         %52 = OpFAdd %float %51 %float_1
         %53 = OpFDiv %float %52 %float_2
         %54 = OpFMul %float %float_36 %53
         %55 = OpFSub %float %54 %float_1
         %56 = OpConvertFToU %uint %55
               OpStore %ycoord %56
         %58 = OpLoad %uint %xcoord
         %59 = OpLoad %uint %ycoord
         %61 = OpIMul %uint %59 %uint_36
         %62 = OpIAdd %uint %58 %61
               OpStore %ndx %62
         %70 = OpLoad %uint %ndx
         %72 = OpAccessChain %_ptr_Uniform_uint %_ %int_0 %70
         %73 = OpLoad %uint %72
               OpStore %in_uint %73
         %75 = OpLoad %uint %in_uint
         %76 = OpBitcast %float %75
               OpStore %in_float %76
         %78 = OpLoad %float %in_float
         %80 = OpExtInst %float %1 Frexp %78 %exp_0
               OpStore %x_0 %80
         %83 = OpLoad %float %in_float
         %84 = OpExtInst %frexpStructType %1 FrexpStruct %83
               OpStore %res_0 %84
         %87 = OpLoad %float %x_0
               OpStore %frexp_x_out %87
         %89 = OpLoad %int %exp_0
         %90 = OpBitcast %float %89
               OpStore %frexp_exp_out %90
         %92 = OpAccessChain %_ptr_Function_float %res_0 %int_0
         %93 = OpLoad %float %92
               OpStore %frexpStruct_x_out %93
         %96 = OpAccessChain %_ptr_Function_int %res_0 %int_1
         %97 = OpLoad %int %96
         %98 = OpBitcast %float %97
               OpStore %frexpStruct_exp_out %98
        %104 = OpLoad %v2float %position
        %106 = OpCompositeExtract %float %104 0
        %107 = OpCompositeExtract %float %104 1
        %108 = OpCompositeConstruct %v4float %106 %107 %float_0 %float_1
        %110 = OpAccessChain %_ptr_Output_v4float %__0 %int_0
               OpStore %110 %108
               OpReturn
               OpFunctionEnd
END

# SHADER fragment frag_shader GLSL
# #version 430
# precision highp float;
#
# layout (location = 0) flat in float frexp_x_in;
# layout (location = 1) flat in float frexp_exp_in;
# layout (location = 2) flat in float frexpStruct_x_in;
# layout (location = 3) flat in float frexpStruct_exp_in;
#
# layout (location = 0) out vec4 frexp_x_out;
# layout (location = 1) out vec4 frexp_exp_out;
# layout (location = 2) out vec4 frexpStruct_x_out;
# layout (location = 3) out vec4 frexpStruct_exp_out;
#
# const vec4 clear_value = vec4(0.0, 0.0, 0.0, 1.0);
#
# void main ()
# {
#     frexp_x_out = clear_value;
#     frexp_exp_out = clear_value;
#     frexpStruct_x_out = clear_value;
#     frexpStruct_exp_out = clear_value;
#     frexp_x_out.r = frexp_x_in;
#     frexp_exp_out.r = frexp_exp_in;
#     frexpStruct_x_out.r = frexpStruct_x_in;
#     frexpStruct_exp_out.r = frexpStruct_exp_in;
# }
# END

SHADER fragment frag_shader SPIRV-ASM
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %frexp_x_out %frexp_exp_out %frexpStruct_x_out %frexpStruct_exp_out %frexp_x_in %frexp_exp_in %frexpStruct_x_in %frexpStruct_exp_in
               OpExecutionMode %main OriginUpperLeft
               OpDecorate %frexp_x_out Location 0
               OpDecorate %frexp_exp_out Location 1
               OpDecorate %frexpStruct_x_out Location 2
               OpDecorate %frexpStruct_exp_out Location 3
               OpDecorate %frexp_x_in Flat
               OpDecorate %frexp_x_in Location 0
               OpDecorate %frexp_exp_in Flat
               OpDecorate %frexp_exp_in Location 1
               OpDecorate %frexpStruct_x_in Flat
               OpDecorate %frexpStruct_x_in Location 2
               OpDecorate %frexpStruct_exp_in Flat
               OpDecorate %frexpStruct_exp_in Location 3
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%frexp_x_out = OpVariable %_ptr_Output_v4float Output
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %12 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
%frexp_exp_out = OpVariable %_ptr_Output_v4float Output
%frexpStruct_x_out = OpVariable %_ptr_Output_v4float Output
%frexpStruct_exp_out = OpVariable %_ptr_Output_v4float Output
%_ptr_Input_float = OpTypePointer Input %float
 %frexp_x_in = OpVariable %_ptr_Input_float Input
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Output_float = OpTypePointer Output %float
%frexp_exp_in = OpVariable %_ptr_Input_float Input
%frexpStruct_x_in = OpVariable %_ptr_Input_float Input
%frexpStruct_exp_in = OpVariable %_ptr_Input_float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
               OpStore %frexp_x_out %12
               OpStore %frexp_exp_out %12
               OpStore %frexpStruct_x_out %12
               OpStore %frexpStruct_exp_out %12
         %18 = OpLoad %float %frexp_x_in
         %22 = OpAccessChain %_ptr_Output_float %frexp_x_out %uint_0
               OpStore %22 %18
         %24 = OpLoad %float %frexp_exp_in
         %25 = OpAccessChain %_ptr_Output_float %frexp_exp_out %uint_0
               OpStore %25 %24
         %27 = OpLoad %float %frexpStruct_x_in
         %28 = OpAccessChain %_ptr_Output_float %frexpStruct_x_out %uint_0
               OpStore %28 %27
         %30 = OpLoad %float %frexpStruct_exp_in
         %31 = OpAccessChain %_ptr_Output_float %frexpStruct_exp_out %uint_0
               OpStore %31 %30
               OpReturn
               OpFunctionEnd
END

BUFFER buf_in DATA_TYPE uint32 SIZE 1296 FILE TEXT input.txt
BUFFER vertices DATA_TYPE vec2<float> SIZE 7776 FILE TEXT grid_vertices.txt

BUFFER frexp_x FORMAT R32G32B32A32_SFLOAT
BUFFER frexp_exp FORMAT R32G32B32A32_SFLOAT
BUFFER frexpStruct_x FORMAT R32G32B32A32_SFLOAT
BUFFER frexpStruct_exp FORMAT R32G32B32A32_SFLOAT

PIPELINE graphics test_pipeline
    FRAMEBUFFER_SIZE 144 144

    ATTACH vert_shader
    ATTACH frag_shader

    VERTEX_DATA vertices LOCATION 0

    BIND BUFFER buf_in AS storage DESCRIPTOR_SET 0 BINDING 0
    BIND BUFFER frexp_x AS color LOCATION 0
    BIND BUFFER frexp_exp AS color LOCATION 1
    BIND BUFFER frexpStruct_x AS color LOCATION 2
    BIND BUFFER frexpStruct_exp AS color LOCATION 3
END

RUN test_pipeline DRAW_ARRAY AS TRIANGLE_LIST START_IDX 0 COUNT 7776

EXPECT frexp_x EQ_BUFFER frexpStruct_x
EXPECT frexp_exp EQ_BUFFER frexpStruct_exp
