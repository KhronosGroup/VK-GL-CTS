#!amber

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A vertex shader test for ModfStruct.

DEVICE_FEATURE vertexPipelineStoresAndAtomics

# SHADER vertex vert_shader GLSL
# #version 430
# precision highp float;
#
# const uint ndp = 1296;
# const uint ndpSqrt = uint(sqrt(ndp));
# const float halfGridElementSize = 1.0 / float(ndpSqrt);
#
# layout (location = 0) in vec2 position;
# layout (location = 0) flat out vec3 modf_x_out;
# layout (location = 1) flat out vec3 modf_i_out;
# layout (location = 2) flat out vec3 modfStruct_x_out;
# layout (location = 3) flat out vec3 modfStruct_i_out;
#
# layout(set = 0, binding = 0) readonly buffer block0 {
#     uvec3 in_values[ndp];
# };
#
# struct modfStructType
# {
#     vec3 x;
#     vec3 i;
# };
#
# // Replaced with native function in SPIR-V.
# modfStructType modfStruct (vec3 orig)
# {
#     vec3 x, i;
#     x = modf(orig, i);
#     modfStructType res = { x, i };
#     return res;
# }
#
# void main ()
# {
#     uint xcoord = uint(ndpSqrt * ((position.x + halfGridElementSize + 1) / 2) - 1);
#     uint ycoord = uint(ndpSqrt * ((position.y + halfGridElementSize + 1) / 2) - 1);
#     uint ndx = xcoord + ycoord * ndpSqrt;
#
#     uvec3 in_uint = in_values[ndx];
#     vec3 in_float = uintBitsToFloat(in_uint);
#     vec3 x, i;
#     modfStructType res;
#
#     x = modf(in_float, i);
#     res = modfStruct(in_float);
#
#     modf_x_out = x;
#     modf_i_out = i;
#     modfStruct_x_out = res.x;
#     modfStruct_i_out = i;
#
#     gl_Position = vec4(position, 0, 1);
#
#     return;
# }
# END

SHADER vertex vert_shader SPIRV-ASM
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %main "main" %position %modf_x_out %modf_i_out %modfStruct_x_out %modfStruct_i_out %__0
               OpDecorate %position Location 0
               OpDecorate %_arr_v3uint_uint_1296 ArrayStride 16
               OpMemberDecorate %block0 0 NonWritable
               OpMemberDecorate %block0 0 Offset 0
               OpDecorate %block0 BufferBlock
               OpDecorate %_ DescriptorSet 0
               OpDecorate %_ Binding 0
               OpDecorate %modf_x_out Flat
               OpDecorate %modf_x_out Location 0
               OpDecorate %modf_i_out Flat
               OpDecorate %modf_i_out Location 1
               OpDecorate %modfStruct_x_out Flat
               OpDecorate %modfStruct_x_out Location 2
               OpDecorate %modfStruct_i_out Flat
               OpDecorate %modfStruct_i_out Location 3
               OpMemberDecorate %gl_PerVertex 0 BuiltIn Position
               OpMemberDecorate %gl_PerVertex 1 BuiltIn PointSize
               OpMemberDecorate %gl_PerVertex 2 BuiltIn ClipDistance
               OpDecorate %gl_PerVertex Block
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
%modfStructType = OpTypeStruct %v3float %v3float
         %10 = OpTypeFunction %modfStructType %_ptr_Function_v3float
%_ptr_Function_modfStructType = OpTypePointer Function %modfStructType
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
   %float_36 = OpConstant %float 36
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
   %position = OpVariable %_ptr_Input_v2float Input
     %uint_0 = OpConstant %uint 0
%_ptr_Input_float = OpTypePointer Input %float
%float_0_027777778 = OpConstant %float 0.027777778
    %float_1 = OpConstant %float 1
    %float_2 = OpConstant %float 2
     %uint_1 = OpConstant %uint 1
    %uint_36 = OpConstant %uint 36
     %v3uint = OpTypeVector %uint 3
%_ptr_Function_v3uint = OpTypePointer Function %v3uint
  %uint_1296 = OpConstant %uint 1296
%_arr_v3uint_uint_1296 = OpTypeArray %v3uint %uint_1296
     %block0 = OpTypeStruct %_arr_v3uint_uint_1296
%_ptr_Uniform_block0 = OpTypePointer Uniform %block0
          %_ = OpVariable %_ptr_Uniform_block0 Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_v3uint = OpTypePointer Uniform %v3uint
%_ptr_Output_v3float = OpTypePointer Output %v3float
 %modf_x_out = OpVariable %_ptr_Output_v3float Output
 %modf_i_out = OpVariable %_ptr_Output_v3float Output
%modfStruct_x_out = OpVariable %_ptr_Output_v3float Output
%modfStruct_i_out = OpVariable %_ptr_Output_v3float Output
    %v4float = OpTypeVector %float 4
%_arr_float_uint_1 = OpTypeArray %float %uint_1
%gl_PerVertex = OpTypeStruct %v4float %float %_arr_float_uint_1
%_ptr_Output_gl_PerVertex = OpTypePointer Output %gl_PerVertex
        %__0 = OpVariable %_ptr_Output_gl_PerVertex Output
    %float_0 = OpConstant %float 0
%_ptr_Output_v4float = OpTypePointer Output %v4float
       %main = OpFunction %void None %3
          %5 = OpLabel
     %xcoord = OpVariable %_ptr_Function_uint Function
     %ycoord = OpVariable %_ptr_Function_uint Function
        %ndx = OpVariable %_ptr_Function_uint Function
    %in_uint = OpVariable %_ptr_Function_v3uint Function
   %in_float = OpVariable %_ptr_Function_v3float Function
        %x_0 = OpVariable %_ptr_Function_v3float Function
        %i_0 = OpVariable %_ptr_Function_v3float Function
      %res_0 = OpVariable %_ptr_Function_modfStructType Function
         %35 = OpAccessChain %_ptr_Input_float %position %uint_0
         %36 = OpLoad %float %35
         %38 = OpFAdd %float %36 %float_0_027777778
         %40 = OpFAdd %float %38 %float_1
         %42 = OpFDiv %float %40 %float_2
         %43 = OpFMul %float %float_36 %42
         %44 = OpFSub %float %43 %float_1
         %45 = OpConvertFToU %uint %44
               OpStore %xcoord %45
         %48 = OpAccessChain %_ptr_Input_float %position %uint_1
         %49 = OpLoad %float %48
         %50 = OpFAdd %float %49 %float_0_027777778
         %51 = OpFAdd %float %50 %float_1
         %52 = OpFDiv %float %51 %float_2
         %53 = OpFMul %float %float_36 %52
         %54 = OpFSub %float %53 %float_1
         %55 = OpConvertFToU %uint %54
               OpStore %ycoord %55
         %57 = OpLoad %uint %xcoord
         %58 = OpLoad %uint %ycoord
         %60 = OpIMul %uint %58 %uint_36
         %61 = OpIAdd %uint %57 %60
               OpStore %ndx %61
         %72 = OpLoad %uint %ndx
         %74 = OpAccessChain %_ptr_Uniform_v3uint %_ %int_0 %72
         %75 = OpLoad %v3uint %74
               OpStore %in_uint %75
         %77 = OpLoad %v3uint %in_uint
         %78 = OpBitcast %v3float %77
               OpStore %in_float %78
         %80 = OpLoad %v3float %in_float
         %82 = OpExtInst %v3float %1 Modf %80 %i_0
               OpStore %x_0 %82
         %85 = OpLoad %v3float %in_float
         %86 = OpExtInst %modfStructType %1 ModfStruct %85
               OpStore %res_0 %86
         %89 = OpLoad %v3float %x_0
               OpStore %modf_x_out %89
         %91 = OpLoad %v3float %i_0
               OpStore %modf_i_out %91
         %93 = OpAccessChain %_ptr_Function_v3float %res_0 %int_0
         %94 = OpLoad %v3float %93
               OpStore %modfStruct_x_out %94
         %96 = OpLoad %v3float %i_0
               OpStore %modfStruct_i_out %96
        %102 = OpLoad %v2float %position
        %104 = OpCompositeExtract %float %102 0
        %105 = OpCompositeExtract %float %102 1
        %106 = OpCompositeConstruct %v4float %104 %105 %float_0 %float_1
        %108 = OpAccessChain %_ptr_Output_v4float %__0 %int_0
               OpStore %108 %106
               OpReturn
               OpFunctionEnd
END

# SHADER fragment frag_shader GLSL
# #version 430
# precision highp float;
#
# layout (location = 0) flat in vec3 modf_x_in;
# layout (location = 1) flat in vec3 modf_i_in;
# layout (location = 2) flat in vec3 modfStruct_x_in;
# layout (location = 3) flat in vec3 modfStruct_i_in;
#
# layout (location = 0) out vec4 modf_x_out;
# layout (location = 1) out vec4 modf_i_out;
# layout (location = 2) out vec4 modfStruct_x_out;
# layout (location = 3) out vec4 modfStruct_i_out;
#
# const vec4 clear_value = vec4(0.0, 0.0, 0.0, 1.0);
#
# void main ()
# {
#     modf_x_out = clear_value;
#     modf_i_out = clear_value;
#     modfStruct_x_out = clear_value;
#     modfStruct_i_out = clear_value;
#     modf_x_out.rgb = modf_x_in;
#     modf_i_out.rgb = modf_i_in;
#     modfStruct_x_out.rgb = modfStruct_x_in;
#     modfStruct_i_out.rgb = modfStruct_i_in;
# }
# END

SHADER fragment frag_shader SPIRV-ASM
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %modf_x_out %modf_i_out %modfStruct_x_out %modfStruct_i_out %modf_x_in %modf_i_in %modfStruct_x_in %modfStruct_i_in
               OpExecutionMode %main OriginUpperLeft
               OpDecorate %modf_x_out Location 0
               OpDecorate %modf_i_out Location 1
               OpDecorate %modfStruct_x_out Location 2
               OpDecorate %modfStruct_i_out Location 3
               OpDecorate %modf_x_in Flat
               OpDecorate %modf_x_in Location 0
               OpDecorate %modf_i_in Flat
               OpDecorate %modf_i_in Location 1
               OpDecorate %modfStruct_x_in Flat
               OpDecorate %modfStruct_x_in Location 2
               OpDecorate %modfStruct_i_in Flat
               OpDecorate %modfStruct_i_in Location 3
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
 %modf_x_out = OpVariable %_ptr_Output_v4float Output
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
         %12 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
 %modf_i_out = OpVariable %_ptr_Output_v4float Output
%modfStruct_x_out = OpVariable %_ptr_Output_v4float Output
%modfStruct_i_out = OpVariable %_ptr_Output_v4float Output
    %v3float = OpTypeVector %float 3
%_ptr_Input_v3float = OpTypePointer Input %v3float
  %modf_x_in = OpVariable %_ptr_Input_v3float Input
  %modf_i_in = OpVariable %_ptr_Input_v3float Input
%modfStruct_x_in = OpVariable %_ptr_Input_v3float Input
%modfStruct_i_in = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
               OpStore %modf_x_out %12
               OpStore %modf_i_out %12
               OpStore %modfStruct_x_out %12
               OpStore %modfStruct_i_out %12
         %19 = OpLoad %v3float %modf_x_in
         %20 = OpLoad %v4float %modf_x_out
         %21 = OpVectorShuffle %v4float %20 %19 4 5 6 3
               OpStore %modf_x_out %21
         %23 = OpLoad %v3float %modf_i_in
         %24 = OpLoad %v4float %modf_i_out
         %25 = OpVectorShuffle %v4float %24 %23 4 5 6 3
               OpStore %modf_i_out %25
         %27 = OpLoad %v3float %modfStruct_x_in
         %28 = OpLoad %v4float %modfStruct_x_out
         %29 = OpVectorShuffle %v4float %28 %27 4 5 6 3
               OpStore %modfStruct_x_out %29
         %31 = OpLoad %v3float %modfStruct_i_in
         %32 = OpLoad %v4float %modfStruct_i_out
         %33 = OpVectorShuffle %v4float %32 %31 4 5 6 3
               OpStore %modfStruct_i_out %33
               OpReturn
               OpFunctionEnd
END

BUFFER buf_in DATA_TYPE uint32 SIZE 1296 FILE TEXT input.txt
BUFFER vertices DATA_TYPE vec2<float> SIZE 7776 FILE TEXT grid_vertices.txt

BUFFER modf_x FORMAT R32G32B32A32_SFLOAT
BUFFER modf_i FORMAT R32G32B32A32_SFLOAT
BUFFER modfStruct_x FORMAT R32G32B32A32_SFLOAT
BUFFER modfStruct_i FORMAT R32G32B32A32_SFLOAT

PIPELINE graphics test_pipeline
    FRAMEBUFFER_SIZE 144 144

    ATTACH vert_shader
    ATTACH frag_shader

    VERTEX_DATA vertices LOCATION 0

    BIND BUFFER buf_in AS storage DESCRIPTOR_SET 0 BINDING 0
    BIND BUFFER modf_x AS color LOCATION 0
    BIND BUFFER modf_i AS color LOCATION 1
    BIND BUFFER modfStruct_x AS color LOCATION 2
    BIND BUFFER modfStruct_i AS color LOCATION 3
END

RUN test_pipeline DRAW_ARRAY AS TRIANGLE_LIST START_IDX 0 COUNT 7776

EXPECT modf_x EQ_BUFFER modfStruct_x
EXPECT modf_i EQ_BUFFER modfStruct_i
