/* WARNING: This is auto-generated file. Do not modify, since changes will
 * be lost! Modify the generating script instead.
 * This file was generated by /scripts/gen_framework.py
 */

#include "tcuCommandLine.hpp"
#include "vktTestCase.hpp"
#include "vkPlatform.hpp"
#include "vkDeviceUtil.hpp"
#include "vkQueryUtil.hpp"
#include "vktCustomInstancesDevices.hpp"
#include "vktTestCase.hpp"
#include "vktTestCaseUtil.hpp"

namespace vkt
{

using namespace vk;


tcu::TestStatus        testGetDeviceProcAddr        (Context& context)
{
    tcu::TestLog&                                log                        (context.getTestContext().getLog());
    const PlatformInterface&                    platformInterface = context.getPlatformInterface();
    const auto                                    validationEnabled = context.getTestContext().getCommandLine().isValidationEnabled();
    const CustomInstance                        instance                (createCustomInstanceFromContext(context));
    const InstanceDriver&                        instanceDriver = instance.getDriver();
    const VkPhysicalDevice                        physicalDevice = chooseDevice(instanceDriver, instance, context.getTestContext().getCommandLine());
    const uint32_t                                queueFamilyIndex = 0;
    const uint32_t                                queueCount = 1;
    const float                                    queuePriority = 1.0f;
    const std::vector<VkQueueFamilyProperties>    queueFamilyProperties = getPhysicalDeviceQueueFamilyProperties(instanceDriver, physicalDevice);

    const VkDeviceQueueCreateInfo            deviceQueueCreateInfo =
    {
        VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO, //  VkStructureType sType;
        nullptr, //  const void* pNext;
        (VkDeviceQueueCreateFlags)0u, //  VkDeviceQueueCreateFlags flags;
        queueFamilyIndex, //  uint32_t queueFamilyIndex;
        queueCount, //  uint32_t queueCount;
        &queuePriority, //  const float* pQueuePriorities;
    };

    const VkDeviceCreateInfo                deviceCreateInfo =
    {
        VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO, //  VkStructureType sType;
        nullptr, //  const void* pNext;
        (VkDeviceCreateFlags)0u, //  VkDeviceCreateFlags flags;
        1u, //  uint32_t queueCreateInfoCount;
        &deviceQueueCreateInfo, //  const VkDeviceQueueCreateInfo* pQueueCreateInfos;
        0u, //  uint32_t enabledLayerCount;
        nullptr, //  const char* const* ppEnabledLayerNames;
        0u, //  uint32_t enabledExtensionCount;
        nullptr, //  const char* const* ppEnabledExtensionNames;
        nullptr, //  const VkPhysicalDeviceFeatures* pEnabledFeatures;
    };
    const Unique<VkDevice>                    device            (createCustomDevice(validationEnabled, platformInterface, instance, instanceDriver, physicalDevice, &deviceCreateInfo));
    const DeviceDriver                        deviceDriver    (platformInterface, instance, device.get(), context.getUsedApiVersion(), context.getTestContext().getCommandLine());

    const std::vector<std::string> functions{

		// "VK_AMDX_shader_enqueue
		"vkCmdDispatchGraphAMDX",
		"vkCmdDispatchGraphIndirectAMDX",
		"vkCmdDispatchGraphIndirectCountAMDX",
		"vkCmdInitializeGraphScratchMemoryAMDX",
		"vkCreateExecutionGraphPipelinesAMDX",
		"vkGetExecutionGraphPipelineNodeIndexAMDX",
		"vkGetExecutionGraphPipelineScratchSizeAMDX",

		// "VK_AMD_anti_lag
		"vkAntiLagUpdateAMD",

		// "VK_AMD_buffer_marker
		"vkCmdWriteBufferMarker2AMD",
		"vkCmdWriteBufferMarkerAMD",

		// "VK_AMD_display_native_hdr
		"vkSetLocalDimmingAMD",

		// "VK_AMD_draw_indirect_count
		"vkCmdDrawIndexedIndirectCountAMD",
		"vkCmdDrawIndirectCountAMD",

		// "VK_AMD_shader_info
		"vkGetShaderInfoAMD",

		// "VK_ANDROID_external_memory_android_hardware_buffer
		"vkGetAndroidHardwareBufferPropertiesANDROID",
		"vkGetMemoryAndroidHardwareBufferANDROID",

		// "VK_ARM_data_graph
		"vkBindDataGraphPipelineSessionMemoryARM",
		"vkCmdDispatchDataGraphARM",
		"vkCreateDataGraphPipelineSessionARM",
		"vkCreateDataGraphPipelinesARM",
		"vkDestroyDataGraphPipelineSessionARM",
		"vkGetDataGraphPipelineAvailablePropertiesARM",
		"vkGetDataGraphPipelinePropertiesARM",
		"vkGetDataGraphPipelineSessionBindPointRequirementsARM",
		"vkGetDataGraphPipelineSessionMemoryRequirementsARM",
		"vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM",
		"vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM",

		// "VK_ARM_tensors
		"vkBindTensorMemoryARM",
		"vkCmdCopyTensorARM",
		"vkCreateTensorARM",
		"vkCreateTensorViewARM",
		"vkDestroyTensorARM",
		"vkDestroyTensorViewARM",
		"vkGetDeviceTensorMemoryRequirementsARM",
		"vkGetPhysicalDeviceExternalTensorPropertiesARM",
		"vkGetTensorMemoryRequirementsARM",
		"vkGetTensorOpaqueCaptureDescriptorDataARM",
		"vkGetTensorViewOpaqueCaptureDescriptorDataARM",

		// "VK_EXT_acquire_drm_display
		"vkAcquireDrmDisplayEXT",
		"vkGetDrmDisplayEXT",

		// "VK_EXT_acquire_xlib_display
		"vkAcquireXlibDisplayEXT",
		"vkGetRandROutputDisplayEXT",

		// "VK_EXT_attachment_feedback_loop_dynamic_state
		"vkCmdSetAttachmentFeedbackLoopEnableEXT",

		// "VK_EXT_buffer_device_address
		"vkGetBufferDeviceAddressEXT",

		// "VK_EXT_calibrated_timestamps
		"vkGetCalibratedTimestampsEXT",
		"vkGetPhysicalDeviceCalibrateableTimeDomainsEXT",

		// "VK_EXT_color_write_enable
		"vkCmdSetColorWriteEnableEXT",

		// "VK_EXT_conditional_rendering
		"vkCmdBeginConditionalRenderingEXT",
		"vkCmdEndConditionalRenderingEXT",

		// "VK_EXT_debug_marker
		"vkCmdDebugMarkerBeginEXT",
		"vkCmdDebugMarkerEndEXT",
		"vkCmdDebugMarkerInsertEXT",
		"vkDebugMarkerSetObjectNameEXT",
		"vkDebugMarkerSetObjectTagEXT",

		// "VK_EXT_debug_report
		"vkCreateDebugReportCallbackEXT",
		"vkDebugReportMessageEXT",
		"vkDestroyDebugReportCallbackEXT",

		// "VK_EXT_debug_utils
		"vkCmdBeginDebugUtilsLabelEXT",
		"vkCmdEndDebugUtilsLabelEXT",
		"vkCmdInsertDebugUtilsLabelEXT",
		"vkCreateDebugUtilsMessengerEXT",
		"vkDestroyDebugUtilsMessengerEXT",
		"vkQueueBeginDebugUtilsLabelEXT",
		"vkQueueEndDebugUtilsLabelEXT",
		"vkQueueInsertDebugUtilsLabelEXT",
		"vkSetDebugUtilsObjectNameEXT",
		"vkSetDebugUtilsObjectTagEXT",
		"vkSubmitDebugUtilsMessageEXT",

		// "VK_EXT_depth_bias_control
		"vkCmdSetDepthBias2EXT",

		// "VK_EXT_depth_clamp_control
		"vkCmdSetDepthClampRangeEXT",

		// "VK_EXT_descriptor_buffer
		"vkCmdBindDescriptorBufferEmbeddedSamplersEXT",
		"vkCmdBindDescriptorBuffersEXT",
		"vkCmdSetDescriptorBufferOffsetsEXT",
		"vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT",
		"vkGetBufferOpaqueCaptureDescriptorDataEXT",
		"vkGetDescriptorEXT",
		"vkGetDescriptorSetLayoutBindingOffsetEXT",
		"vkGetDescriptorSetLayoutSizeEXT",
		"vkGetImageOpaqueCaptureDescriptorDataEXT",
		"vkGetImageViewOpaqueCaptureDescriptorDataEXT",
		"vkGetSamplerOpaqueCaptureDescriptorDataEXT",

		// "VK_EXT_device_fault
		"vkGetDeviceFaultInfoEXT",

		// "VK_EXT_device_generated_commands
		"vkCmdExecuteGeneratedCommandsEXT",
		"vkCmdPreprocessGeneratedCommandsEXT",
		"vkCreateIndirectCommandsLayoutEXT",
		"vkCreateIndirectExecutionSetEXT",
		"vkDestroyIndirectCommandsLayoutEXT",
		"vkDestroyIndirectExecutionSetEXT",
		"vkGetGeneratedCommandsMemoryRequirementsEXT",
		"vkUpdateIndirectExecutionSetPipelineEXT",
		"vkUpdateIndirectExecutionSetShaderEXT",

		// "VK_EXT_direct_mode_display
		"vkReleaseDisplayEXT",

		// "VK_EXT_directfb_surface
		"vkCreateDirectFBSurfaceEXT",
		"vkGetPhysicalDeviceDirectFBPresentationSupportEXT",

		// "VK_EXT_discard_rectangles
		"vkCmdSetDiscardRectangleEXT",
		"vkCmdSetDiscardRectangleEnableEXT",
		"vkCmdSetDiscardRectangleModeEXT",

		// "VK_EXT_display_control
		"vkDisplayPowerControlEXT",
		"vkGetSwapchainCounterEXT",
		"vkRegisterDeviceEventEXT",
		"vkRegisterDisplayEventEXT",

		// "VK_EXT_display_surface_counter
		"vkGetPhysicalDeviceSurfaceCapabilities2EXT",

		// "VK_EXT_extended_dynamic_state
		"vkCmdBindVertexBuffers2EXT",
		"vkCmdSetCullModeEXT",
		"vkCmdSetDepthBoundsTestEnableEXT",
		"vkCmdSetDepthCompareOpEXT",
		"vkCmdSetDepthTestEnableEXT",
		"vkCmdSetDepthWriteEnableEXT",
		"vkCmdSetFrontFaceEXT",
		"vkCmdSetPrimitiveTopologyEXT",
		"vkCmdSetScissorWithCountEXT",
		"vkCmdSetStencilOpEXT",
		"vkCmdSetStencilTestEnableEXT",
		"vkCmdSetViewportWithCountEXT",

		// "VK_EXT_extended_dynamic_state2
		"vkCmdSetDepthBiasEnableEXT",
		"vkCmdSetLogicOpEXT",
		"vkCmdSetPatchControlPointsEXT",
		"vkCmdSetPrimitiveRestartEnableEXT",
		"vkCmdSetRasterizerDiscardEnableEXT",

		// "VK_EXT_extended_dynamic_state3
		"vkCmdSetAlphaToCoverageEnableEXT",
		"vkCmdSetAlphaToOneEnableEXT",
		"vkCmdSetColorBlendAdvancedEXT",
		"vkCmdSetColorBlendEnableEXT",
		"vkCmdSetColorBlendEquationEXT",
		"vkCmdSetColorWriteMaskEXT",
		"vkCmdSetConservativeRasterizationModeEXT",
		"vkCmdSetCoverageModulationModeNV",
		"vkCmdSetCoverageModulationTableEnableNV",
		"vkCmdSetCoverageModulationTableNV",
		"vkCmdSetCoverageReductionModeNV",
		"vkCmdSetCoverageToColorEnableNV",
		"vkCmdSetCoverageToColorLocationNV",
		"vkCmdSetDepthClampEnableEXT",
		"vkCmdSetDepthClipEnableEXT",
		"vkCmdSetDepthClipNegativeOneToOneEXT",
		"vkCmdSetExtraPrimitiveOverestimationSizeEXT",
		"vkCmdSetLineRasterizationModeEXT",
		"vkCmdSetLineStippleEnableEXT",
		"vkCmdSetLogicOpEnableEXT",
		"vkCmdSetPolygonModeEXT",
		"vkCmdSetProvokingVertexModeEXT",
		"vkCmdSetRasterizationSamplesEXT",
		"vkCmdSetRasterizationStreamEXT",
		"vkCmdSetRepresentativeFragmentTestEnableNV",
		"vkCmdSetSampleLocationsEnableEXT",
		"vkCmdSetSampleMaskEXT",
		"vkCmdSetShadingRateImageEnableNV",
		"vkCmdSetTessellationDomainOriginEXT",
		"vkCmdSetViewportSwizzleNV",
		"vkCmdSetViewportWScalingEnableNV",

		// "VK_EXT_external_memory_host
		"vkGetMemoryHostPointerPropertiesEXT",

		// "VK_EXT_external_memory_metal
		"vkGetMemoryMetalHandleEXT",
		"vkGetMemoryMetalHandlePropertiesEXT",

		// "VK_EXT_fragment_density_map_offset
		"vkCmdEndRendering2EXT",

		// "VK_EXT_full_screen_exclusive
		"vkAcquireFullScreenExclusiveModeEXT",
		"vkGetDeviceGroupSurfacePresentModes2EXT",
		"vkGetPhysicalDeviceSurfacePresentModes2EXT",
		"vkReleaseFullScreenExclusiveModeEXT",

		// "VK_EXT_hdr_metadata
		"vkSetHdrMetadataEXT",

		// "VK_EXT_headless_surface
		"vkCreateHeadlessSurfaceEXT",

		// "VK_EXT_host_image_copy
		"vkCopyImageToImageEXT",
		"vkCopyImageToMemoryEXT",
		"vkCopyMemoryToImageEXT",
		"vkGetImageSubresourceLayout2EXT",
		"vkTransitionImageLayoutEXT",

		// "VK_EXT_host_query_reset
		"vkResetQueryPoolEXT",

		// "VK_EXT_image_compression_control
		"vkGetImageSubresourceLayout2EXT",

		// "VK_EXT_image_drm_format_modifier
		"vkGetImageDrmFormatModifierPropertiesEXT",

		// "VK_EXT_line_rasterization
		"vkCmdSetLineStippleEXT",

		// "VK_EXT_memory_decompression
		"vkCmdDecompressMemoryEXT",
		"vkCmdDecompressMemoryIndirectCountEXT",

		// "VK_EXT_mesh_shader
		"vkCmdDrawMeshTasksEXT",
		"vkCmdDrawMeshTasksIndirectCountEXT",
		"vkCmdDrawMeshTasksIndirectEXT",

		// "VK_EXT_metal_objects
		"vkExportMetalObjectsEXT",

		// "VK_EXT_metal_surface
		"vkCreateMetalSurfaceEXT",

		// "VK_EXT_multi_draw
		"vkCmdDrawMultiEXT",
		"vkCmdDrawMultiIndexedEXT",

		// "VK_EXT_opacity_micromap
		"vkBuildMicromapsEXT",
		"vkCmdBuildMicromapsEXT",
		"vkCmdCopyMemoryToMicromapEXT",
		"vkCmdCopyMicromapEXT",
		"vkCmdCopyMicromapToMemoryEXT",
		"vkCmdWriteMicromapsPropertiesEXT",
		"vkCopyMemoryToMicromapEXT",
		"vkCopyMicromapEXT",
		"vkCopyMicromapToMemoryEXT",
		"vkCreateMicromapEXT",
		"vkDestroyMicromapEXT",
		"vkGetDeviceMicromapCompatibilityEXT",
		"vkGetMicromapBuildSizesEXT",
		"vkWriteMicromapsPropertiesEXT",

		// "VK_EXT_pageable_device_local_memory
		"vkSetDeviceMemoryPriorityEXT",

		// "VK_EXT_pipeline_properties
		"vkGetPipelinePropertiesEXT",

		// "VK_EXT_private_data
		"vkCreatePrivateDataSlotEXT",
		"vkDestroyPrivateDataSlotEXT",
		"vkGetPrivateDataEXT",
		"vkSetPrivateDataEXT",

		// "VK_EXT_sample_locations
		"vkCmdSetSampleLocationsEXT",
		"vkGetPhysicalDeviceMultisamplePropertiesEXT",

		// "VK_EXT_shader_module_identifier
		"vkGetShaderModuleCreateInfoIdentifierEXT",
		"vkGetShaderModuleIdentifierEXT",

		// "VK_EXT_shader_object
		"vkCmdBindShadersEXT",
		"vkCmdBindVertexBuffers2EXT",
		"vkCmdSetAlphaToCoverageEnableEXT",
		"vkCmdSetAlphaToOneEnableEXT",
		"vkCmdSetColorBlendAdvancedEXT",
		"vkCmdSetColorBlendEnableEXT",
		"vkCmdSetColorBlendEquationEXT",
		"vkCmdSetColorWriteMaskEXT",
		"vkCmdSetConservativeRasterizationModeEXT",
		"vkCmdSetCoverageModulationModeNV",
		"vkCmdSetCoverageModulationTableEnableNV",
		"vkCmdSetCoverageModulationTableNV",
		"vkCmdSetCoverageReductionModeNV",
		"vkCmdSetCoverageToColorEnableNV",
		"vkCmdSetCoverageToColorLocationNV",
		"vkCmdSetCullModeEXT",
		"vkCmdSetDepthBiasEnableEXT",
		"vkCmdSetDepthBoundsTestEnableEXT",
		"vkCmdSetDepthClampEnableEXT",
		"vkCmdSetDepthClampRangeEXT",
		"vkCmdSetDepthClipEnableEXT",
		"vkCmdSetDepthClipNegativeOneToOneEXT",
		"vkCmdSetDepthCompareOpEXT",
		"vkCmdSetDepthTestEnableEXT",
		"vkCmdSetDepthWriteEnableEXT",
		"vkCmdSetExtraPrimitiveOverestimationSizeEXT",
		"vkCmdSetFrontFaceEXT",
		"vkCmdSetLineRasterizationModeEXT",
		"vkCmdSetLineStippleEnableEXT",
		"vkCmdSetLogicOpEXT",
		"vkCmdSetLogicOpEnableEXT",
		"vkCmdSetPatchControlPointsEXT",
		"vkCmdSetPolygonModeEXT",
		"vkCmdSetPrimitiveRestartEnableEXT",
		"vkCmdSetPrimitiveTopologyEXT",
		"vkCmdSetProvokingVertexModeEXT",
		"vkCmdSetRasterizationSamplesEXT",
		"vkCmdSetRasterizationStreamEXT",
		"vkCmdSetRasterizerDiscardEnableEXT",
		"vkCmdSetRepresentativeFragmentTestEnableNV",
		"vkCmdSetSampleLocationsEnableEXT",
		"vkCmdSetSampleMaskEXT",
		"vkCmdSetScissorWithCountEXT",
		"vkCmdSetShadingRateImageEnableNV",
		"vkCmdSetStencilOpEXT",
		"vkCmdSetStencilTestEnableEXT",
		"vkCmdSetTessellationDomainOriginEXT",
		"vkCmdSetVertexInputEXT",
		"vkCmdSetViewportSwizzleNV",
		"vkCmdSetViewportWScalingEnableNV",
		"vkCmdSetViewportWithCountEXT",
		"vkCreateShadersEXT",
		"vkDestroyShaderEXT",
		"vkGetShaderBinaryDataEXT",

		// "VK_EXT_swapchain_maintenance1
		"vkReleaseSwapchainImagesEXT",

		// "VK_EXT_tooling_info
		"vkGetPhysicalDeviceToolPropertiesEXT",

		// "VK_EXT_transform_feedback
		"vkCmdBeginQueryIndexedEXT",
		"vkCmdBeginTransformFeedbackEXT",
		"vkCmdBindTransformFeedbackBuffersEXT",
		"vkCmdDrawIndirectByteCountEXT",
		"vkCmdEndQueryIndexedEXT",
		"vkCmdEndTransformFeedbackEXT",

		// "VK_EXT_validation_cache
		"vkCreateValidationCacheEXT",
		"vkDestroyValidationCacheEXT",
		"vkGetValidationCacheDataEXT",
		"vkMergeValidationCachesEXT",

		// "VK_EXT_vertex_input_dynamic_state
		"vkCmdSetVertexInputEXT",

		// "VK_FUCHSIA_buffer_collection
		"vkCreateBufferCollectionFUCHSIA",
		"vkDestroyBufferCollectionFUCHSIA",
		"vkGetBufferCollectionPropertiesFUCHSIA",
		"vkSetBufferCollectionBufferConstraintsFUCHSIA",
		"vkSetBufferCollectionImageConstraintsFUCHSIA",

		// "VK_FUCHSIA_external_memory
		"vkGetMemoryZirconHandleFUCHSIA",
		"vkGetMemoryZirconHandlePropertiesFUCHSIA",

		// "VK_FUCHSIA_external_semaphore
		"vkGetSemaphoreZirconHandleFUCHSIA",
		"vkImportSemaphoreZirconHandleFUCHSIA",

		// "VK_FUCHSIA_imagepipe_surface
		"vkCreateImagePipeSurfaceFUCHSIA",

		// "VK_GGP_stream_descriptor_surface
		"vkCreateStreamDescriptorSurfaceGGP",

		// "VK_GOOGLE_display_timing
		"vkGetPastPresentationTimingGOOGLE",
		"vkGetRefreshCycleDurationGOOGLE",

		// "VK_HUAWEI_cluster_culling_shader
		"vkCmdDrawClusterHUAWEI",
		"vkCmdDrawClusterIndirectHUAWEI",

		// "VK_HUAWEI_invocation_mask
		"vkCmdBindInvocationMaskHUAWEI",

		// "VK_HUAWEI_subpass_shading
		"vkCmdSubpassShadingHUAWEI",
		"vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI",

		// "VK_INTEL_performance_query
		"vkAcquirePerformanceConfigurationINTEL",
		"vkCmdSetPerformanceMarkerINTEL",
		"vkCmdSetPerformanceOverrideINTEL",
		"vkCmdSetPerformanceStreamMarkerINTEL",
		"vkGetPerformanceParameterINTEL",
		"vkInitializePerformanceApiINTEL",
		"vkQueueSetPerformanceConfigurationINTEL",
		"vkReleasePerformanceConfigurationINTEL",
		"vkUninitializePerformanceApiINTEL",

		// "VK_KHR_acceleration_structure
		"vkBuildAccelerationStructuresKHR",
		"vkCmdBuildAccelerationStructuresIndirectKHR",
		"vkCmdBuildAccelerationStructuresKHR",
		"vkCmdCopyAccelerationStructureKHR",
		"vkCmdCopyAccelerationStructureToMemoryKHR",
		"vkCmdCopyMemoryToAccelerationStructureKHR",
		"vkCmdWriteAccelerationStructuresPropertiesKHR",
		"vkCopyAccelerationStructureKHR",
		"vkCopyAccelerationStructureToMemoryKHR",
		"vkCopyMemoryToAccelerationStructureKHR",
		"vkCreateAccelerationStructureKHR",
		"vkDestroyAccelerationStructureKHR",
		"vkGetAccelerationStructureBuildSizesKHR",
		"vkGetAccelerationStructureDeviceAddressKHR",
		"vkGetDeviceAccelerationStructureCompatibilityKHR",
		"vkWriteAccelerationStructuresPropertiesKHR",

		// "VK_KHR_android_surface
		"vkCreateAndroidSurfaceKHR",

		// "VK_KHR_bind_memory2
		"vkBindBufferMemory2KHR",
		"vkBindImageMemory2KHR",

		// "VK_KHR_buffer_device_address
		"vkGetBufferDeviceAddressKHR",
		"vkGetBufferOpaqueCaptureAddressKHR",
		"vkGetDeviceMemoryOpaqueCaptureAddressKHR",

		// "VK_KHR_calibrated_timestamps
		"vkGetCalibratedTimestampsKHR",
		"vkGetPhysicalDeviceCalibrateableTimeDomainsKHR",

		// "VK_KHR_cooperative_matrix
		"vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR",

		// "VK_KHR_copy_commands2
		"vkCmdBlitImage2KHR",
		"vkCmdCopyBuffer2KHR",
		"vkCmdCopyBufferToImage2KHR",
		"vkCmdCopyImage2KHR",
		"vkCmdCopyImageToBuffer2KHR",
		"vkCmdResolveImage2KHR",

		// "VK_KHR_copy_memory_indirect
		"vkCmdCopyMemoryIndirectKHR",
		"vkCmdCopyMemoryToImageIndirectKHR",

		// "VK_KHR_create_renderpass2
		"vkCmdBeginRenderPass2KHR",
		"vkCmdEndRenderPass2KHR",
		"vkCmdNextSubpass2KHR",
		"vkCreateRenderPass2KHR",

		// "VK_KHR_deferred_host_operations
		"vkCreateDeferredOperationKHR",
		"vkDeferredOperationJoinKHR",
		"vkDestroyDeferredOperationKHR",
		"vkGetDeferredOperationMaxConcurrencyKHR",
		"vkGetDeferredOperationResultKHR",

		// "VK_KHR_descriptor_update_template
		"vkCmdPushDescriptorSetWithTemplateKHR",
		"vkCreateDescriptorUpdateTemplateKHR",
		"vkDestroyDescriptorUpdateTemplateKHR",
		"vkUpdateDescriptorSetWithTemplateKHR",

		// "VK_KHR_device_group
		"vkAcquireNextImage2KHR",
		"vkCmdDispatchBaseKHR",
		"vkCmdSetDeviceMaskKHR",
		"vkGetDeviceGroupPeerMemoryFeaturesKHR",
		"vkGetDeviceGroupPresentCapabilitiesKHR",
		"vkGetDeviceGroupSurfacePresentModesKHR",
		"vkGetPhysicalDevicePresentRectanglesKHR",

		// "VK_KHR_device_group_creation
		"vkEnumeratePhysicalDeviceGroupsKHR",

		// "VK_KHR_display
		"vkCreateDisplayModeKHR",
		"vkCreateDisplayPlaneSurfaceKHR",
		"vkGetDisplayModePropertiesKHR",
		"vkGetDisplayPlaneCapabilitiesKHR",
		"vkGetDisplayPlaneSupportedDisplaysKHR",
		"vkGetPhysicalDeviceDisplayPlanePropertiesKHR",
		"vkGetPhysicalDeviceDisplayPropertiesKHR",

		// "VK_KHR_display_swapchain
		"vkCreateSharedSwapchainsKHR",

		// "VK_KHR_draw_indirect_count
		"vkCmdDrawIndexedIndirectCountKHR",
		"vkCmdDrawIndirectCountKHR",

		// "VK_KHR_dynamic_rendering
		"vkCmdBeginRenderingKHR",
		"vkCmdEndRenderingKHR",

		// "VK_KHR_dynamic_rendering_local_read
		"vkCmdSetRenderingAttachmentLocationsKHR",
		"vkCmdSetRenderingInputAttachmentIndicesKHR",

		// "VK_KHR_external_fence_capabilities
		"vkGetPhysicalDeviceExternalFencePropertiesKHR",

		// "VK_KHR_external_fence_fd
		"vkGetFenceFdKHR",
		"vkImportFenceFdKHR",

		// "VK_KHR_external_fence_win32
		"vkGetFenceWin32HandleKHR",
		"vkImportFenceWin32HandleKHR",

		// "VK_KHR_external_memory_capabilities
		"vkGetPhysicalDeviceExternalBufferPropertiesKHR",

		// "VK_KHR_external_memory_fd
		"vkGetMemoryFdKHR",
		"vkGetMemoryFdPropertiesKHR",

		// "VK_KHR_external_memory_win32
		"vkGetMemoryWin32HandleKHR",
		"vkGetMemoryWin32HandlePropertiesKHR",

		// "VK_KHR_external_semaphore_capabilities
		"vkGetPhysicalDeviceExternalSemaphorePropertiesKHR",

		// "VK_KHR_external_semaphore_fd
		"vkGetSemaphoreFdKHR",
		"vkImportSemaphoreFdKHR",

		// "VK_KHR_external_semaphore_win32
		"vkGetSemaphoreWin32HandleKHR",
		"vkImportSemaphoreWin32HandleKHR",

		// "VK_KHR_fragment_shading_rate
		"vkCmdSetFragmentShadingRateKHR",
		"vkGetPhysicalDeviceFragmentShadingRatesKHR",

		// "VK_KHR_get_display_properties2
		"vkGetDisplayModeProperties2KHR",
		"vkGetDisplayPlaneCapabilities2KHR",
		"vkGetPhysicalDeviceDisplayPlaneProperties2KHR",
		"vkGetPhysicalDeviceDisplayProperties2KHR",

		// "VK_KHR_get_memory_requirements2
		"vkGetBufferMemoryRequirements2KHR",
		"vkGetImageMemoryRequirements2KHR",
		"vkGetImageSparseMemoryRequirements2KHR",

		// "VK_KHR_get_physical_device_properties2
		"vkGetPhysicalDeviceFeatures2KHR",
		"vkGetPhysicalDeviceFormatProperties2KHR",
		"vkGetPhysicalDeviceImageFormatProperties2KHR",
		"vkGetPhysicalDeviceMemoryProperties2KHR",
		"vkGetPhysicalDeviceProperties2KHR",
		"vkGetPhysicalDeviceQueueFamilyProperties2KHR",
		"vkGetPhysicalDeviceSparseImageFormatProperties2KHR",

		// "VK_KHR_get_surface_capabilities2
		"vkGetPhysicalDeviceSurfaceCapabilities2KHR",
		"vkGetPhysicalDeviceSurfaceFormats2KHR",

		// "VK_KHR_line_rasterization
		"vkCmdSetLineStippleKHR",

		// "VK_KHR_maintenance1
		"vkTrimCommandPoolKHR",

		// "VK_KHR_maintenance10
		"vkCmdEndRendering2KHR",

		// "VK_KHR_maintenance3
		"vkGetDescriptorSetLayoutSupportKHR",

		// "VK_KHR_maintenance4
		"vkGetDeviceBufferMemoryRequirementsKHR",
		"vkGetDeviceImageMemoryRequirementsKHR",
		"vkGetDeviceImageSparseMemoryRequirementsKHR",

		// "VK_KHR_maintenance5
		"vkCmdBindIndexBuffer2KHR",
		"vkGetDeviceImageSubresourceLayoutKHR",
		"vkGetImageSubresourceLayout2KHR",
		"vkGetRenderingAreaGranularityKHR",

		// "VK_KHR_maintenance6
		"vkCmdBindDescriptorBufferEmbeddedSamplers2EXT",
		"vkCmdBindDescriptorSets2KHR",
		"vkCmdPushConstants2KHR",
		"vkCmdPushDescriptorSet2KHR",
		"vkCmdPushDescriptorSetWithTemplate2KHR",
		"vkCmdSetDescriptorBufferOffsets2EXT",

		// "VK_KHR_map_memory2
		"vkMapMemory2KHR",
		"vkUnmapMemory2KHR",

		// "VK_KHR_performance_query
		"vkAcquireProfilingLockKHR",
		"vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR",
		"vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR",
		"vkReleaseProfilingLockKHR",

		// "VK_KHR_pipeline_binary
		"vkCreatePipelineBinariesKHR",
		"vkDestroyPipelineBinaryKHR",
		"vkGetPipelineBinaryDataKHR",
		"vkGetPipelineKeyKHR",
		"vkReleaseCapturedPipelineDataKHR",

		// "VK_KHR_pipeline_executable_properties
		"vkGetPipelineExecutableInternalRepresentationsKHR",
		"vkGetPipelineExecutablePropertiesKHR",
		"vkGetPipelineExecutableStatisticsKHR",

		// "VK_KHR_present_wait
		"vkWaitForPresentKHR",

		// "VK_KHR_present_wait2
		"vkWaitForPresent2KHR",

		// "VK_KHR_push_descriptor
		"vkCmdPushDescriptorSetKHR",
		"vkCmdPushDescriptorSetWithTemplateKHR",

		// "VK_KHR_ray_tracing_maintenance1
		"vkCmdTraceRaysIndirect2KHR",

		// "VK_KHR_ray_tracing_pipeline
		"vkCmdSetRayTracingPipelineStackSizeKHR",
		"vkCmdTraceRaysIndirectKHR",
		"vkCmdTraceRaysKHR",
		"vkCreateRayTracingPipelinesKHR",
		"vkGetRayTracingCaptureReplayShaderGroupHandlesKHR",
		"vkGetRayTracingShaderGroupHandlesKHR",
		"vkGetRayTracingShaderGroupStackSizeKHR",

		// "VK_KHR_sampler_ycbcr_conversion
		"vkCreateSamplerYcbcrConversionKHR",
		"vkDestroySamplerYcbcrConversionKHR",

		// "VK_KHR_shared_presentable_image
		"vkGetSwapchainStatusKHR",

		// "VK_KHR_surface
		"vkDestroySurfaceKHR",
		"vkGetPhysicalDeviceSurfaceCapabilitiesKHR",
		"vkGetPhysicalDeviceSurfaceFormatsKHR",
		"vkGetPhysicalDeviceSurfacePresentModesKHR",
		"vkGetPhysicalDeviceSurfaceSupportKHR",

		// "VK_KHR_swapchain
		"vkAcquireNextImage2KHR",
		"vkAcquireNextImageKHR",
		"vkCreateSwapchainKHR",
		"vkDestroySwapchainKHR",
		"vkGetDeviceGroupPresentCapabilitiesKHR",
		"vkGetDeviceGroupSurfacePresentModesKHR",
		"vkGetPhysicalDevicePresentRectanglesKHR",
		"vkGetSwapchainImagesKHR",
		"vkQueuePresentKHR",

		// "VK_KHR_swapchain_maintenance1
		"vkReleaseSwapchainImagesKHR",

		// "VK_KHR_synchronization2
		"vkCmdPipelineBarrier2KHR",
		"vkCmdResetEvent2KHR",
		"vkCmdSetEvent2KHR",
		"vkCmdWaitEvents2KHR",
		"vkCmdWriteTimestamp2KHR",
		"vkQueueSubmit2KHR",

		// "VK_KHR_timeline_semaphore
		"vkGetSemaphoreCounterValueKHR",
		"vkSignalSemaphoreKHR",
		"vkWaitSemaphoresKHR",

		// "VK_KHR_video_decode_queue
		"vkCmdDecodeVideoKHR",

		// "VK_KHR_video_encode_queue
		"vkCmdEncodeVideoKHR",
		"vkGetEncodedVideoSessionParametersKHR",
		"vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR",

		// "VK_KHR_video_queue
		"vkBindVideoSessionMemoryKHR",
		"vkCmdBeginVideoCodingKHR",
		"vkCmdControlVideoCodingKHR",
		"vkCmdEndVideoCodingKHR",
		"vkCreateVideoSessionKHR",
		"vkCreateVideoSessionParametersKHR",
		"vkDestroyVideoSessionKHR",
		"vkDestroyVideoSessionParametersKHR",
		"vkGetPhysicalDeviceVideoCapabilitiesKHR",
		"vkGetPhysicalDeviceVideoFormatPropertiesKHR",
		"vkGetVideoSessionMemoryRequirementsKHR",
		"vkUpdateVideoSessionParametersKHR",

		// "VK_KHR_wayland_surface
		"vkCreateWaylandSurfaceKHR",
		"vkGetPhysicalDeviceWaylandPresentationSupportKHR",

		// "VK_KHR_win32_surface
		"vkCreateWin32SurfaceKHR",
		"vkGetPhysicalDeviceWin32PresentationSupportKHR",

		// "VK_KHR_xcb_surface
		"vkCreateXcbSurfaceKHR",
		"vkGetPhysicalDeviceXcbPresentationSupportKHR",

		// "VK_KHR_xlib_surface
		"vkCreateXlibSurfaceKHR",
		"vkGetPhysicalDeviceXlibPresentationSupportKHR",

		// "VK_MVK_ios_surface
		"vkCreateIOSSurfaceMVK",

		// "VK_MVK_macos_surface
		"vkCreateMacOSSurfaceMVK",

		// "VK_NN_vi_surface
		"vkCreateViSurfaceNN",

		// "VK_NVX_binary_import
		"vkCmdCuLaunchKernelNVX",
		"vkCreateCuFunctionNVX",
		"vkCreateCuModuleNVX",
		"vkDestroyCuFunctionNVX",
		"vkDestroyCuModuleNVX",

		// "VK_NVX_image_view_handle
		"vkGetImageViewAddressNVX",
		"vkGetImageViewHandle64NVX",
		"vkGetImageViewHandleNVX",

		// "VK_NV_acquire_winrt_display
		"vkAcquireWinrtDisplayNV",
		"vkGetWinrtDisplayNV",

		// "VK_NV_clip_space_w_scaling
		"vkCmdSetViewportWScalingNV",

		// "VK_NV_cluster_acceleration_structure
		"vkCmdBuildClusterAccelerationStructureIndirectNV",
		"vkGetClusterAccelerationStructureBuildSizesNV",

		// "VK_NV_cooperative_matrix
		"vkGetPhysicalDeviceCooperativeMatrixPropertiesNV",

		// "VK_NV_cooperative_matrix2
		"vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV",

		// "VK_NV_cooperative_vector
		"vkCmdConvertCooperativeVectorMatrixNV",
		"vkConvertCooperativeVectorMatrixNV",
		"vkGetPhysicalDeviceCooperativeVectorPropertiesNV",

		// "VK_NV_copy_memory_indirect
		"vkCmdCopyMemoryIndirectNV",
		"vkCmdCopyMemoryToImageIndirectNV",

		// "VK_NV_coverage_reduction_mode
		"vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV",

		// "VK_NV_cuda_kernel_launch
		"vkCmdCudaLaunchKernelNV",
		"vkCreateCudaFunctionNV",
		"vkCreateCudaModuleNV",
		"vkDestroyCudaFunctionNV",
		"vkDestroyCudaModuleNV",
		"vkGetCudaModuleCacheNV",

		// "VK_NV_device_diagnostic_checkpoints
		"vkCmdSetCheckpointNV",
		"vkGetQueueCheckpointData2NV",
		"vkGetQueueCheckpointDataNV",

		// "VK_NV_device_generated_commands
		"vkCmdBindPipelineShaderGroupNV",
		"vkCmdExecuteGeneratedCommandsNV",
		"vkCmdPreprocessGeneratedCommandsNV",
		"vkCreateIndirectCommandsLayoutNV",
		"vkDestroyIndirectCommandsLayoutNV",
		"vkGetGeneratedCommandsMemoryRequirementsNV",

		// "VK_NV_device_generated_commands_compute
		"vkCmdUpdatePipelineIndirectBufferNV",
		"vkGetPipelineIndirectDeviceAddressNV",
		"vkGetPipelineIndirectMemoryRequirementsNV",

		// "VK_NV_external_compute_queue
		"vkCreateExternalComputeQueueNV",
		"vkDestroyExternalComputeQueueNV",
		"vkGetExternalComputeQueueDataNV",

		// "VK_NV_external_memory_capabilities
		"vkGetPhysicalDeviceExternalImageFormatPropertiesNV",

		// "VK_NV_external_memory_rdma
		"vkGetMemoryRemoteAddressNV",

		// "VK_NV_external_memory_win32
		"vkGetMemoryWin32HandleNV",

		// "VK_NV_fragment_shading_rate_enums
		"vkCmdSetFragmentShadingRateEnumNV",

		// "VK_NV_low_latency2
		"vkGetLatencyTimingsNV",
		"vkLatencySleepNV",
		"vkQueueNotifyOutOfBandNV",
		"vkSetLatencyMarkerNV",
		"vkSetLatencySleepModeNV",

		// "VK_NV_memory_decompression
		"vkCmdDecompressMemoryIndirectCountNV",
		"vkCmdDecompressMemoryNV",

		// "VK_NV_mesh_shader
		"vkCmdDrawMeshTasksIndirectCountNV",
		"vkCmdDrawMeshTasksIndirectNV",
		"vkCmdDrawMeshTasksNV",

		// "VK_NV_optical_flow
		"vkBindOpticalFlowSessionImageNV",
		"vkCmdOpticalFlowExecuteNV",
		"vkCreateOpticalFlowSessionNV",
		"vkDestroyOpticalFlowSessionNV",
		"vkGetPhysicalDeviceOpticalFlowImageFormatsNV",

		// "VK_NV_partitioned_acceleration_structure
		"vkCmdBuildPartitionedAccelerationStructuresNV",
		"vkGetPartitionedAccelerationStructuresBuildSizesNV",

		// "VK_NV_ray_tracing
		"vkBindAccelerationStructureMemoryNV",
		"vkCmdBuildAccelerationStructureNV",
		"vkCmdCopyAccelerationStructureNV",
		"vkCmdTraceRaysNV",
		"vkCmdWriteAccelerationStructuresPropertiesNV",
		"vkCompileDeferredNV",
		"vkCreateAccelerationStructureNV",
		"vkCreateRayTracingPipelinesNV",
		"vkDestroyAccelerationStructureNV",
		"vkGetAccelerationStructureHandleNV",
		"vkGetAccelerationStructureMemoryRequirementsNV",
		"vkGetRayTracingShaderGroupHandlesNV",

		// "VK_NV_scissor_exclusive
		"vkCmdSetExclusiveScissorEnableNV",
		"vkCmdSetExclusiveScissorNV",

		// "VK_NV_shading_rate_image
		"vkCmdBindShadingRateImageNV",
		"vkCmdSetCoarseSampleOrderNV",
		"vkCmdSetViewportShadingRatePaletteNV",

		// "VK_OHOS_native_buffer
		"vkAcquireImageOHOS",
		"vkGetSwapchainGrallocUsageOHOS",
		"vkQueueSignalReleaseImageOHOS",

		// "VK_OHOS_surface
		"vkCreateSurfaceOHOS",

		// "VK_QCOM_tile_memory_heap
		"vkCmdBindTileMemoryQCOM",

		// "VK_QCOM_tile_properties
		"vkGetDynamicRenderingTilePropertiesQCOM",
		"vkGetFramebufferTilePropertiesQCOM",

		// "VK_QCOM_tile_shading
		"vkCmdBeginPerTileExecutionQCOM",
		"vkCmdDispatchTileQCOM",
		"vkCmdEndPerTileExecutionQCOM",

		// "VK_QNX_external_memory_screen_buffer
		"vkGetScreenBufferPropertiesQNX",

		// "VK_QNX_screen_surface
		"vkCreateScreenSurfaceQNX",
		"vkGetPhysicalDeviceScreenPresentationSupportQNX",

		// "VK_VALVE_descriptor_set_host_mapping
		"vkGetDescriptorSetHostMappingVALVE",
		"vkGetDescriptorSetLayoutHostMappingInfoVALVE",
    };

    bool fail = false;
    for (const auto& function : functions)
    {
        if (deviceDriver.getDeviceProcAddr(device.get(), function.c_str()) != nullptr)
        {
            fail = true;
            log << tcu::TestLog::Message << "Function " << function << " is not NULL" << tcu::TestLog::EndMessage;
        }
    }
    if (fail)
        return tcu::TestStatus::fail("Fail");
    return tcu::TestStatus::pass("All functions are NULL");
}

void addGetDeviceProcAddrTests (tcu::TestCaseGroup* testGroup)
{
	addFunctionCase(testGroup, "non_enabled", testGetDeviceProcAddr);
}

}

