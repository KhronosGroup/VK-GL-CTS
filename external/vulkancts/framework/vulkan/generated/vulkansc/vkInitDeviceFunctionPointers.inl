/* WARNING: This is auto-generated file. Do not modify, since changes will
 * be lost! Modify the generating script instead.
 * This file was generated by /scripts/gen_framework.py
 */

m_vk.getDeviceProcAddr						= (GetDeviceProcAddrFunc)						GET_PROC_ADDR("vkGetDeviceProcAddr");
m_vk.destroyDevice							= (DestroyDeviceFunc)							GET_PROC_ADDR("vkDestroyDevice");
m_vk.getDeviceQueue							= (GetDeviceQueueFunc)							GET_PROC_ADDR("vkGetDeviceQueue");
m_vk.queueSubmit							= (QueueSubmitFunc)								GET_PROC_ADDR("vkQueueSubmit");
m_vk.queueWaitIdle							= (QueueWaitIdleFunc)							GET_PROC_ADDR("vkQueueWaitIdle");
m_vk.deviceWaitIdle							= (DeviceWaitIdleFunc)							GET_PROC_ADDR("vkDeviceWaitIdle");
m_vk.allocateMemory							= (AllocateMemoryFunc)							GET_PROC_ADDR("vkAllocateMemory");
m_vk.mapMemory								= (MapMemoryFunc)								GET_PROC_ADDR("vkMapMemory");
m_vk.unmapMemory							= (UnmapMemoryFunc)								GET_PROC_ADDR("vkUnmapMemory");
m_vk.flushMappedMemoryRanges				= (FlushMappedMemoryRangesFunc)					GET_PROC_ADDR("vkFlushMappedMemoryRanges");
m_vk.invalidateMappedMemoryRanges			= (InvalidateMappedMemoryRangesFunc)			GET_PROC_ADDR("vkInvalidateMappedMemoryRanges");
m_vk.getDeviceMemoryCommitment				= (GetDeviceMemoryCommitmentFunc)				GET_PROC_ADDR("vkGetDeviceMemoryCommitment");
m_vk.bindBufferMemory						= (BindBufferMemoryFunc)						GET_PROC_ADDR("vkBindBufferMemory");
m_vk.bindImageMemory						= (BindImageMemoryFunc)							GET_PROC_ADDR("vkBindImageMemory");
m_vk.getBufferMemoryRequirements			= (GetBufferMemoryRequirementsFunc)				GET_PROC_ADDR("vkGetBufferMemoryRequirements");
m_vk.getImageMemoryRequirements				= (GetImageMemoryRequirementsFunc)				GET_PROC_ADDR("vkGetImageMemoryRequirements");
m_vk.createFence							= (CreateFenceFunc)								GET_PROC_ADDR("vkCreateFence");
m_vk.destroyFence							= (DestroyFenceFunc)							GET_PROC_ADDR("vkDestroyFence");
m_vk.resetFences							= (ResetFencesFunc)								GET_PROC_ADDR("vkResetFences");
m_vk.getFenceStatus							= (GetFenceStatusFunc)							GET_PROC_ADDR("vkGetFenceStatus");
m_vk.waitForFences							= (WaitForFencesFunc)							GET_PROC_ADDR("vkWaitForFences");
m_vk.createSemaphore						= (CreateSemaphoreFunc)							GET_PROC_ADDR("vkCreateSemaphore");
m_vk.destroySemaphore						= (DestroySemaphoreFunc)						GET_PROC_ADDR("vkDestroySemaphore");
m_vk.createEvent							= (CreateEventFunc)								GET_PROC_ADDR("vkCreateEvent");
m_vk.destroyEvent							= (DestroyEventFunc)							GET_PROC_ADDR("vkDestroyEvent");
m_vk.getEventStatus							= (GetEventStatusFunc)							GET_PROC_ADDR("vkGetEventStatus");
m_vk.setEvent								= (SetEventFunc)								GET_PROC_ADDR("vkSetEvent");
m_vk.resetEvent								= (ResetEventFunc)								GET_PROC_ADDR("vkResetEvent");
m_vk.createQueryPool						= (CreateQueryPoolFunc)							GET_PROC_ADDR("vkCreateQueryPool");
m_vk.getQueryPoolResults					= (GetQueryPoolResultsFunc)						GET_PROC_ADDR("vkGetQueryPoolResults");
m_vk.createBuffer							= (CreateBufferFunc)							GET_PROC_ADDR("vkCreateBuffer");
m_vk.destroyBuffer							= (DestroyBufferFunc)							GET_PROC_ADDR("vkDestroyBuffer");
m_vk.createBufferView						= (CreateBufferViewFunc)						GET_PROC_ADDR("vkCreateBufferView");
m_vk.destroyBufferView						= (DestroyBufferViewFunc)						GET_PROC_ADDR("vkDestroyBufferView");
m_vk.createImage							= (CreateImageFunc)								GET_PROC_ADDR("vkCreateImage");
m_vk.destroyImage							= (DestroyImageFunc)							GET_PROC_ADDR("vkDestroyImage");
m_vk.getImageSubresourceLayout				= (GetImageSubresourceLayoutFunc)				GET_PROC_ADDR("vkGetImageSubresourceLayout");
m_vk.createImageView						= (CreateImageViewFunc)							GET_PROC_ADDR("vkCreateImageView");
m_vk.destroyImageView						= (DestroyImageViewFunc)						GET_PROC_ADDR("vkDestroyImageView");
m_vk.createPipelineCache					= (CreatePipelineCacheFunc)						GET_PROC_ADDR("vkCreatePipelineCache");
m_vk.destroyPipelineCache					= (DestroyPipelineCacheFunc)					GET_PROC_ADDR("vkDestroyPipelineCache");
m_vk.createGraphicsPipelines				= (CreateGraphicsPipelinesFunc)					GET_PROC_ADDR("vkCreateGraphicsPipelines");
m_vk.createComputePipelines					= (CreateComputePipelinesFunc)					GET_PROC_ADDR("vkCreateComputePipelines");
m_vk.destroyPipeline						= (DestroyPipelineFunc)							GET_PROC_ADDR("vkDestroyPipeline");
m_vk.createPipelineLayout					= (CreatePipelineLayoutFunc)					GET_PROC_ADDR("vkCreatePipelineLayout");
m_vk.destroyPipelineLayout					= (DestroyPipelineLayoutFunc)					GET_PROC_ADDR("vkDestroyPipelineLayout");
m_vk.createSampler							= (CreateSamplerFunc)							GET_PROC_ADDR("vkCreateSampler");
m_vk.destroySampler							= (DestroySamplerFunc)							GET_PROC_ADDR("vkDestroySampler");
m_vk.createDescriptorSetLayout				= (CreateDescriptorSetLayoutFunc)				GET_PROC_ADDR("vkCreateDescriptorSetLayout");
m_vk.destroyDescriptorSetLayout				= (DestroyDescriptorSetLayoutFunc)				GET_PROC_ADDR("vkDestroyDescriptorSetLayout");
m_vk.createDescriptorPool					= (CreateDescriptorPoolFunc)					GET_PROC_ADDR("vkCreateDescriptorPool");
m_vk.resetDescriptorPool					= (ResetDescriptorPoolFunc)						GET_PROC_ADDR("vkResetDescriptorPool");
m_vk.allocateDescriptorSets					= (AllocateDescriptorSetsFunc)					GET_PROC_ADDR("vkAllocateDescriptorSets");
m_vk.freeDescriptorSets						= (FreeDescriptorSetsFunc)						GET_PROC_ADDR("vkFreeDescriptorSets");
m_vk.updateDescriptorSets					= (UpdateDescriptorSetsFunc)					GET_PROC_ADDR("vkUpdateDescriptorSets");
m_vk.createFramebuffer						= (CreateFramebufferFunc)						GET_PROC_ADDR("vkCreateFramebuffer");
m_vk.destroyFramebuffer						= (DestroyFramebufferFunc)						GET_PROC_ADDR("vkDestroyFramebuffer");
m_vk.createRenderPass						= (CreateRenderPassFunc)						GET_PROC_ADDR("vkCreateRenderPass");
m_vk.destroyRenderPass						= (DestroyRenderPassFunc)						GET_PROC_ADDR("vkDestroyRenderPass");
m_vk.getRenderAreaGranularity				= (GetRenderAreaGranularityFunc)				GET_PROC_ADDR("vkGetRenderAreaGranularity");
m_vk.createCommandPool						= (CreateCommandPoolFunc)						GET_PROC_ADDR("vkCreateCommandPool");
m_vk.resetCommandPool						= (ResetCommandPoolFunc)						GET_PROC_ADDR("vkResetCommandPool");
m_vk.allocateCommandBuffers					= (AllocateCommandBuffersFunc)					GET_PROC_ADDR("vkAllocateCommandBuffers");
m_vk.freeCommandBuffers						= (FreeCommandBuffersFunc)						GET_PROC_ADDR("vkFreeCommandBuffers");
m_vk.beginCommandBuffer						= (BeginCommandBufferFunc)						GET_PROC_ADDR("vkBeginCommandBuffer");
m_vk.endCommandBuffer						= (EndCommandBufferFunc)						GET_PROC_ADDR("vkEndCommandBuffer");
m_vk.resetCommandBuffer						= (ResetCommandBufferFunc)						GET_PROC_ADDR("vkResetCommandBuffer");
m_vk.cmdBindPipeline						= (CmdBindPipelineFunc)							GET_PROC_ADDR("vkCmdBindPipeline");
m_vk.cmdSetViewport							= (CmdSetViewportFunc)							GET_PROC_ADDR("vkCmdSetViewport");
m_vk.cmdSetScissor							= (CmdSetScissorFunc)							GET_PROC_ADDR("vkCmdSetScissor");
m_vk.cmdSetLineWidth						= (CmdSetLineWidthFunc)							GET_PROC_ADDR("vkCmdSetLineWidth");
m_vk.cmdSetDepthBias						= (CmdSetDepthBiasFunc)							GET_PROC_ADDR("vkCmdSetDepthBias");
m_vk.cmdSetBlendConstants					= (CmdSetBlendConstantsFunc)					GET_PROC_ADDR("vkCmdSetBlendConstants");
m_vk.cmdSetDepthBounds						= (CmdSetDepthBoundsFunc)						GET_PROC_ADDR("vkCmdSetDepthBounds");
m_vk.cmdSetStencilCompareMask				= (CmdSetStencilCompareMaskFunc)				GET_PROC_ADDR("vkCmdSetStencilCompareMask");
m_vk.cmdSetStencilWriteMask					= (CmdSetStencilWriteMaskFunc)					GET_PROC_ADDR("vkCmdSetStencilWriteMask");
m_vk.cmdSetStencilReference					= (CmdSetStencilReferenceFunc)					GET_PROC_ADDR("vkCmdSetStencilReference");
m_vk.cmdBindDescriptorSets					= (CmdBindDescriptorSetsFunc)					GET_PROC_ADDR("vkCmdBindDescriptorSets");
m_vk.cmdBindIndexBuffer						= (CmdBindIndexBufferFunc)						GET_PROC_ADDR("vkCmdBindIndexBuffer");
m_vk.cmdBindVertexBuffers					= (CmdBindVertexBuffersFunc)					GET_PROC_ADDR("vkCmdBindVertexBuffers");
m_vk.cmdDraw								= (CmdDrawFunc)									GET_PROC_ADDR("vkCmdDraw");
m_vk.cmdDrawIndexed							= (CmdDrawIndexedFunc)							GET_PROC_ADDR("vkCmdDrawIndexed");
m_vk.cmdDrawIndirect						= (CmdDrawIndirectFunc)							GET_PROC_ADDR("vkCmdDrawIndirect");
m_vk.cmdDrawIndexedIndirect					= (CmdDrawIndexedIndirectFunc)					GET_PROC_ADDR("vkCmdDrawIndexedIndirect");
m_vk.cmdDispatch							= (CmdDispatchFunc)								GET_PROC_ADDR("vkCmdDispatch");
m_vk.cmdDispatchIndirect					= (CmdDispatchIndirectFunc)						GET_PROC_ADDR("vkCmdDispatchIndirect");
m_vk.cmdCopyBuffer							= (CmdCopyBufferFunc)							GET_PROC_ADDR("vkCmdCopyBuffer");
m_vk.cmdCopyImage							= (CmdCopyImageFunc)							GET_PROC_ADDR("vkCmdCopyImage");
m_vk.cmdBlitImage							= (CmdBlitImageFunc)							GET_PROC_ADDR("vkCmdBlitImage");
m_vk.cmdCopyBufferToImage					= (CmdCopyBufferToImageFunc)					GET_PROC_ADDR("vkCmdCopyBufferToImage");
m_vk.cmdCopyImageToBuffer					= (CmdCopyImageToBufferFunc)					GET_PROC_ADDR("vkCmdCopyImageToBuffer");
m_vk.cmdUpdateBuffer						= (CmdUpdateBufferFunc)							GET_PROC_ADDR("vkCmdUpdateBuffer");
m_vk.cmdFillBuffer							= (CmdFillBufferFunc)							GET_PROC_ADDR("vkCmdFillBuffer");
m_vk.cmdClearColorImage						= (CmdClearColorImageFunc)						GET_PROC_ADDR("vkCmdClearColorImage");
m_vk.cmdClearDepthStencilImage				= (CmdClearDepthStencilImageFunc)				GET_PROC_ADDR("vkCmdClearDepthStencilImage");
m_vk.cmdClearAttachments					= (CmdClearAttachmentsFunc)						GET_PROC_ADDR("vkCmdClearAttachments");
m_vk.cmdResolveImage						= (CmdResolveImageFunc)							GET_PROC_ADDR("vkCmdResolveImage");
m_vk.cmdSetEvent							= (CmdSetEventFunc)								GET_PROC_ADDR("vkCmdSetEvent");
m_vk.cmdResetEvent							= (CmdResetEventFunc)							GET_PROC_ADDR("vkCmdResetEvent");
m_vk.cmdWaitEvents							= (CmdWaitEventsFunc)							GET_PROC_ADDR("vkCmdWaitEvents");
m_vk.cmdPipelineBarrier						= (CmdPipelineBarrierFunc)						GET_PROC_ADDR("vkCmdPipelineBarrier");
m_vk.cmdBeginQuery							= (CmdBeginQueryFunc)							GET_PROC_ADDR("vkCmdBeginQuery");
m_vk.cmdEndQuery							= (CmdEndQueryFunc)								GET_PROC_ADDR("vkCmdEndQuery");
m_vk.cmdResetQueryPool						= (CmdResetQueryPoolFunc)						GET_PROC_ADDR("vkCmdResetQueryPool");
m_vk.cmdWriteTimestamp						= (CmdWriteTimestampFunc)						GET_PROC_ADDR("vkCmdWriteTimestamp");
m_vk.cmdCopyQueryPoolResults				= (CmdCopyQueryPoolResultsFunc)					GET_PROC_ADDR("vkCmdCopyQueryPoolResults");
m_vk.cmdPushConstants						= (CmdPushConstantsFunc)						GET_PROC_ADDR("vkCmdPushConstants");
m_vk.cmdBeginRenderPass						= (CmdBeginRenderPassFunc)						GET_PROC_ADDR("vkCmdBeginRenderPass");
m_vk.cmdNextSubpass							= (CmdNextSubpassFunc)							GET_PROC_ADDR("vkCmdNextSubpass");
m_vk.cmdEndRenderPass						= (CmdEndRenderPassFunc)						GET_PROC_ADDR("vkCmdEndRenderPass");
m_vk.cmdExecuteCommands						= (CmdExecuteCommandsFunc)						GET_PROC_ADDR("vkCmdExecuteCommands");
m_vk.bindBufferMemory2						= (BindBufferMemory2Func)						GET_PROC_ADDR("vkBindBufferMemory2");
m_vk.bindImageMemory2						= (BindImageMemory2Func)						GET_PROC_ADDR("vkBindImageMemory2");
m_vk.getDeviceGroupPeerMemoryFeatures		= (GetDeviceGroupPeerMemoryFeaturesFunc)		GET_PROC_ADDR("vkGetDeviceGroupPeerMemoryFeatures");
m_vk.cmdSetDeviceMask						= (CmdSetDeviceMaskFunc)						GET_PROC_ADDR("vkCmdSetDeviceMask");
m_vk.cmdDispatchBase						= (CmdDispatchBaseFunc)							GET_PROC_ADDR("vkCmdDispatchBase");
m_vk.getImageMemoryRequirements2			= (GetImageMemoryRequirements2Func)				GET_PROC_ADDR("vkGetImageMemoryRequirements2");
m_vk.getBufferMemoryRequirements2			= (GetBufferMemoryRequirements2Func)			GET_PROC_ADDR("vkGetBufferMemoryRequirements2");
m_vk.getDeviceQueue2						= (GetDeviceQueue2Func)							GET_PROC_ADDR("vkGetDeviceQueue2");
m_vk.createSamplerYcbcrConversion			= (CreateSamplerYcbcrConversionFunc)			GET_PROC_ADDR("vkCreateSamplerYcbcrConversion");
m_vk.destroySamplerYcbcrConversion			= (DestroySamplerYcbcrConversionFunc)			GET_PROC_ADDR("vkDestroySamplerYcbcrConversion");
m_vk.getDescriptorSetLayoutSupport			= (GetDescriptorSetLayoutSupportFunc)			GET_PROC_ADDR("vkGetDescriptorSetLayoutSupport");
m_vk.cmdDrawIndirectCount					= (CmdDrawIndirectCountFunc)					GET_PROC_ADDR("vkCmdDrawIndirectCount");
m_vk.cmdDrawIndexedIndirectCount			= (CmdDrawIndexedIndirectCountFunc)				GET_PROC_ADDR("vkCmdDrawIndexedIndirectCount");
m_vk.createRenderPass2						= (CreateRenderPass2Func)						GET_PROC_ADDR("vkCreateRenderPass2");
m_vk.cmdBeginRenderPass2					= (CmdBeginRenderPass2Func)						GET_PROC_ADDR("vkCmdBeginRenderPass2");
m_vk.cmdNextSubpass2						= (CmdNextSubpass2Func)							GET_PROC_ADDR("vkCmdNextSubpass2");
m_vk.cmdEndRenderPass2						= (CmdEndRenderPass2Func)						GET_PROC_ADDR("vkCmdEndRenderPass2");
m_vk.resetQueryPool							= (ResetQueryPoolFunc)							GET_PROC_ADDR("vkResetQueryPool");
m_vk.getSemaphoreCounterValue				= (GetSemaphoreCounterValueFunc)				GET_PROC_ADDR("vkGetSemaphoreCounterValue");
m_vk.waitSemaphores							= (WaitSemaphoresFunc)							GET_PROC_ADDR("vkWaitSemaphores");
m_vk.signalSemaphore						= (SignalSemaphoreFunc)							GET_PROC_ADDR("vkSignalSemaphore");
m_vk.getBufferDeviceAddress					= (GetBufferDeviceAddressFunc)					GET_PROC_ADDR("vkGetBufferDeviceAddress");
m_vk.getBufferOpaqueCaptureAddress			= (GetBufferOpaqueCaptureAddressFunc)			GET_PROC_ADDR("vkGetBufferOpaqueCaptureAddress");
m_vk.getDeviceMemoryOpaqueCaptureAddress	= (GetDeviceMemoryOpaqueCaptureAddressFunc)		GET_PROC_ADDR("vkGetDeviceMemoryOpaqueCaptureAddress");
m_vk.getCommandPoolMemoryConsumption		= (GetCommandPoolMemoryConsumptionFunc)			GET_PROC_ADDR("vkGetCommandPoolMemoryConsumption");
m_vk.getFaultData							= (GetFaultDataFunc)							GET_PROC_ADDR("vkGetFaultData");
m_vk.createSwapchainKHR						= (CreateSwapchainKHRFunc)						GET_PROC_ADDR("vkCreateSwapchainKHR");
m_vk.getSwapchainImagesKHR					= (GetSwapchainImagesKHRFunc)					GET_PROC_ADDR("vkGetSwapchainImagesKHR");
m_vk.acquireNextImageKHR					= (AcquireNextImageKHRFunc)						GET_PROC_ADDR("vkAcquireNextImageKHR");
m_vk.queuePresentKHR						= (QueuePresentKHRFunc)							GET_PROC_ADDR("vkQueuePresentKHR");
m_vk.getDeviceGroupPresentCapabilitiesKHR	= (GetDeviceGroupPresentCapabilitiesKHRFunc)	GET_PROC_ADDR("vkGetDeviceGroupPresentCapabilitiesKHR");
m_vk.getDeviceGroupSurfacePresentModesKHR	= (GetDeviceGroupSurfacePresentModesKHRFunc)	GET_PROC_ADDR("vkGetDeviceGroupSurfacePresentModesKHR");
m_vk.acquireNextImage2KHR					= (AcquireNextImage2KHRFunc)					GET_PROC_ADDR("vkAcquireNextImage2KHR");
m_vk.createSharedSwapchainsKHR				= (CreateSharedSwapchainsKHRFunc)				GET_PROC_ADDR("vkCreateSharedSwapchainsKHR");
m_vk.getMemoryFdKHR							= (GetMemoryFdKHRFunc)							GET_PROC_ADDR("vkGetMemoryFdKHR");
m_vk.getMemoryFdPropertiesKHR				= (GetMemoryFdPropertiesKHRFunc)				GET_PROC_ADDR("vkGetMemoryFdPropertiesKHR");
m_vk.importSemaphoreFdKHR					= (ImportSemaphoreFdKHRFunc)					GET_PROC_ADDR("vkImportSemaphoreFdKHR");
m_vk.getSemaphoreFdKHR						= (GetSemaphoreFdKHRFunc)						GET_PROC_ADDR("vkGetSemaphoreFdKHR");
m_vk.getSwapchainStatusKHR					= (GetSwapchainStatusKHRFunc)					GET_PROC_ADDR("vkGetSwapchainStatusKHR");
m_vk.importFenceFdKHR						= (ImportFenceFdKHRFunc)						GET_PROC_ADDR("vkImportFenceFdKHR");
m_vk.getFenceFdKHR							= (GetFenceFdKHRFunc)							GET_PROC_ADDR("vkGetFenceFdKHR");
m_vk.acquireProfilingLockKHR				= (AcquireProfilingLockKHRFunc)					GET_PROC_ADDR("vkAcquireProfilingLockKHR");
m_vk.releaseProfilingLockKHR				= (ReleaseProfilingLockKHRFunc)					GET_PROC_ADDR("vkReleaseProfilingLockKHR");
m_vk.cmdSetFragmentShadingRateKHR			= (CmdSetFragmentShadingRateKHRFunc)			GET_PROC_ADDR("vkCmdSetFragmentShadingRateKHR");
m_vk.cmdRefreshObjectsKHR					= (CmdRefreshObjectsKHRFunc)					GET_PROC_ADDR("vkCmdRefreshObjectsKHR");
m_vk.cmdSetEvent2KHR						= (CmdSetEvent2KHRFunc)							GET_PROC_ADDR("vkCmdSetEvent2KHR");
m_vk.cmdResetEvent2KHR						= (CmdResetEvent2KHRFunc)						GET_PROC_ADDR("vkCmdResetEvent2KHR");
m_vk.cmdWaitEvents2KHR						= (CmdWaitEvents2KHRFunc)						GET_PROC_ADDR("vkCmdWaitEvents2KHR");
m_vk.cmdPipelineBarrier2KHR					= (CmdPipelineBarrier2KHRFunc)					GET_PROC_ADDR("vkCmdPipelineBarrier2KHR");
m_vk.cmdWriteTimestamp2KHR					= (CmdWriteTimestamp2KHRFunc)					GET_PROC_ADDR("vkCmdWriteTimestamp2KHR");
m_vk.queueSubmit2KHR						= (QueueSubmit2KHRFunc)							GET_PROC_ADDR("vkQueueSubmit2KHR");
m_vk.cmdWriteBufferMarker2AMD				= (CmdWriteBufferMarker2AMDFunc)				GET_PROC_ADDR("vkCmdWriteBufferMarker2AMD");
m_vk.getQueueCheckpointData2NV				= (GetQueueCheckpointData2NVFunc)				GET_PROC_ADDR("vkGetQueueCheckpointData2NV");
m_vk.cmdCopyBuffer2KHR						= (CmdCopyBuffer2KHRFunc)						GET_PROC_ADDR("vkCmdCopyBuffer2KHR");
m_vk.cmdCopyImage2KHR						= (CmdCopyImage2KHRFunc)						GET_PROC_ADDR("vkCmdCopyImage2KHR");
m_vk.cmdCopyBufferToImage2KHR				= (CmdCopyBufferToImage2KHRFunc)				GET_PROC_ADDR("vkCmdCopyBufferToImage2KHR");
m_vk.cmdCopyImageToBuffer2KHR				= (CmdCopyImageToBuffer2KHRFunc)				GET_PROC_ADDR("vkCmdCopyImageToBuffer2KHR");
m_vk.cmdBlitImage2KHR						= (CmdBlitImage2KHRFunc)						GET_PROC_ADDR("vkCmdBlitImage2KHR");
m_vk.cmdResolveImage2KHR					= (CmdResolveImage2KHRFunc)						GET_PROC_ADDR("vkCmdResolveImage2KHR");
m_vk.displayPowerControlEXT					= (DisplayPowerControlEXTFunc)					GET_PROC_ADDR("vkDisplayPowerControlEXT");
m_vk.registerDeviceEventEXT					= (RegisterDeviceEventEXTFunc)					GET_PROC_ADDR("vkRegisterDeviceEventEXT");
m_vk.registerDisplayEventEXT				= (RegisterDisplayEventEXTFunc)					GET_PROC_ADDR("vkRegisterDisplayEventEXT");
m_vk.getSwapchainCounterEXT					= (GetSwapchainCounterEXTFunc)					GET_PROC_ADDR("vkGetSwapchainCounterEXT");
m_vk.cmdSetDiscardRectangleEXT				= (CmdSetDiscardRectangleEXTFunc)				GET_PROC_ADDR("vkCmdSetDiscardRectangleEXT");
m_vk.setHdrMetadataEXT						= (SetHdrMetadataEXTFunc)						GET_PROC_ADDR("vkSetHdrMetadataEXT");
m_vk.setDebugUtilsObjectNameEXT				= (SetDebugUtilsObjectNameEXTFunc)				GET_PROC_ADDR("vkSetDebugUtilsObjectNameEXT");
m_vk.setDebugUtilsObjectTagEXT				= (SetDebugUtilsObjectTagEXTFunc)				GET_PROC_ADDR("vkSetDebugUtilsObjectTagEXT");
m_vk.queueBeginDebugUtilsLabelEXT			= (QueueBeginDebugUtilsLabelEXTFunc)			GET_PROC_ADDR("vkQueueBeginDebugUtilsLabelEXT");
m_vk.queueEndDebugUtilsLabelEXT				= (QueueEndDebugUtilsLabelEXTFunc)				GET_PROC_ADDR("vkQueueEndDebugUtilsLabelEXT");
m_vk.queueInsertDebugUtilsLabelEXT			= (QueueInsertDebugUtilsLabelEXTFunc)			GET_PROC_ADDR("vkQueueInsertDebugUtilsLabelEXT");
m_vk.cmdBeginDebugUtilsLabelEXT				= (CmdBeginDebugUtilsLabelEXTFunc)				GET_PROC_ADDR("vkCmdBeginDebugUtilsLabelEXT");
m_vk.cmdEndDebugUtilsLabelEXT				= (CmdEndDebugUtilsLabelEXTFunc)				GET_PROC_ADDR("vkCmdEndDebugUtilsLabelEXT");
m_vk.cmdInsertDebugUtilsLabelEXT			= (CmdInsertDebugUtilsLabelEXTFunc)				GET_PROC_ADDR("vkCmdInsertDebugUtilsLabelEXT");
m_vk.cmdSetSampleLocationsEXT				= (CmdSetSampleLocationsEXTFunc)				GET_PROC_ADDR("vkCmdSetSampleLocationsEXT");
m_vk.getImageDrmFormatModifierPropertiesEXT	= (GetImageDrmFormatModifierPropertiesEXTFunc)	GET_PROC_ADDR("vkGetImageDrmFormatModifierPropertiesEXT");
m_vk.getMemoryHostPointerPropertiesEXT		= (GetMemoryHostPointerPropertiesEXTFunc)		GET_PROC_ADDR("vkGetMemoryHostPointerPropertiesEXT");
m_vk.getCalibratedTimestampsEXT				= (GetCalibratedTimestampsEXTFunc)				GET_PROC_ADDR("vkGetCalibratedTimestampsEXT");
m_vk.cmdSetLineStippleEXT					= (CmdSetLineStippleEXTFunc)					GET_PROC_ADDR("vkCmdSetLineStippleEXT");
m_vk.cmdSetCullModeEXT						= (CmdSetCullModeEXTFunc)						GET_PROC_ADDR("vkCmdSetCullModeEXT");
m_vk.cmdSetFrontFaceEXT						= (CmdSetFrontFaceEXTFunc)						GET_PROC_ADDR("vkCmdSetFrontFaceEXT");
m_vk.cmdSetPrimitiveTopologyEXT				= (CmdSetPrimitiveTopologyEXTFunc)				GET_PROC_ADDR("vkCmdSetPrimitiveTopologyEXT");
m_vk.cmdSetViewportWithCountEXT				= (CmdSetViewportWithCountEXTFunc)				GET_PROC_ADDR("vkCmdSetViewportWithCountEXT");
m_vk.cmdSetScissorWithCountEXT				= (CmdSetScissorWithCountEXTFunc)				GET_PROC_ADDR("vkCmdSetScissorWithCountEXT");
m_vk.cmdBindVertexBuffers2EXT				= (CmdBindVertexBuffers2EXTFunc)				GET_PROC_ADDR("vkCmdBindVertexBuffers2EXT");
m_vk.cmdSetDepthTestEnableEXT				= (CmdSetDepthTestEnableEXTFunc)				GET_PROC_ADDR("vkCmdSetDepthTestEnableEXT");
m_vk.cmdSetDepthWriteEnableEXT				= (CmdSetDepthWriteEnableEXTFunc)				GET_PROC_ADDR("vkCmdSetDepthWriteEnableEXT");
m_vk.cmdSetDepthCompareOpEXT				= (CmdSetDepthCompareOpEXTFunc)					GET_PROC_ADDR("vkCmdSetDepthCompareOpEXT");
m_vk.cmdSetDepthBoundsTestEnableEXT			= (CmdSetDepthBoundsTestEnableEXTFunc)			GET_PROC_ADDR("vkCmdSetDepthBoundsTestEnableEXT");
m_vk.cmdSetStencilTestEnableEXT				= (CmdSetStencilTestEnableEXTFunc)				GET_PROC_ADDR("vkCmdSetStencilTestEnableEXT");
m_vk.cmdSetStencilOpEXT						= (CmdSetStencilOpEXTFunc)						GET_PROC_ADDR("vkCmdSetStencilOpEXT");
m_vk.cmdSetVertexInputEXT					= (CmdSetVertexInputEXTFunc)					GET_PROC_ADDR("vkCmdSetVertexInputEXT");
m_vk.cmdSetPatchControlPointsEXT			= (CmdSetPatchControlPointsEXTFunc)				GET_PROC_ADDR("vkCmdSetPatchControlPointsEXT");
m_vk.cmdSetRasterizerDiscardEnableEXT		= (CmdSetRasterizerDiscardEnableEXTFunc)		GET_PROC_ADDR("vkCmdSetRasterizerDiscardEnableEXT");
m_vk.cmdSetDepthBiasEnableEXT				= (CmdSetDepthBiasEnableEXTFunc)				GET_PROC_ADDR("vkCmdSetDepthBiasEnableEXT");
m_vk.cmdSetLogicOpEXT						= (CmdSetLogicOpEXTFunc)						GET_PROC_ADDR("vkCmdSetLogicOpEXT");
m_vk.cmdSetPrimitiveRestartEnableEXT		= (CmdSetPrimitiveRestartEnableEXTFunc)			GET_PROC_ADDR("vkCmdSetPrimitiveRestartEnableEXT");
m_vk.cmdSetColorWriteEnableEXT				= (CmdSetColorWriteEnableEXTFunc)				GET_PROC_ADDR("vkCmdSetColorWriteEnableEXT");
m_vk.getFenceSciSyncFenceNV					= (GetFenceSciSyncFenceNVFunc)					GET_PROC_ADDR("vkGetFenceSciSyncFenceNV");
m_vk.getFenceSciSyncObjNV					= (GetFenceSciSyncObjNVFunc)					GET_PROC_ADDR("vkGetFenceSciSyncObjNV");
m_vk.importFenceSciSyncFenceNV				= (ImportFenceSciSyncFenceNVFunc)				GET_PROC_ADDR("vkImportFenceSciSyncFenceNV");
m_vk.importFenceSciSyncObjNV				= (ImportFenceSciSyncObjNVFunc)					GET_PROC_ADDR("vkImportFenceSciSyncObjNV");
m_vk.getSemaphoreSciSyncObjNV				= (GetSemaphoreSciSyncObjNVFunc)				GET_PROC_ADDR("vkGetSemaphoreSciSyncObjNV");
m_vk.importSemaphoreSciSyncObjNV			= (ImportSemaphoreSciSyncObjNVFunc)				GET_PROC_ADDR("vkImportSemaphoreSciSyncObjNV");
m_vk.getMemorySciBufNV						= (GetMemorySciBufNVFunc)						GET_PROC_ADDR("vkGetMemorySciBufNV");
m_vk.createSemaphoreSciSyncPoolNV			= (CreateSemaphoreSciSyncPoolNVFunc)			GET_PROC_ADDR("vkCreateSemaphoreSciSyncPoolNV");
